{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HeaderComponent = class HeaderComponent {\n  constructor(userService, sanitizer, logSer, router, _sanckBar) {\n    this.userService = userService;\n    this.sanitizer = sanitizer;\n    this.logSer = logSer;\n    this.router = router;\n    this._sanckBar = _sanckBar;\n    this.imageSrc = '';\n    this.adminLoggedIn = false;\n    this.userName = \"\";\n    this.isVisible = false;\n  }\n  ngOnInit() {\n    this.status = \"login\";\n    this.logSer.userLoggedIn.subscribe(email => {\n      if (email == true) {\n        this.userService.getUserName().subscribe(data => {\n          this.userName = data.name;\n        });\n        this.userService.getProfileImg().subscribe(data => {\n          if (data && data.imageData) {\n            const imageData = data.imageData;\n            const binaryData = atob(imageData);\n            const arrayBuffer = new ArrayBuffer(binaryData.length);\n            const uint8Array = new Uint8Array(arrayBuffer);\n            for (let i = 0; i < binaryData.length; i++) {\n              uint8Array[i] = binaryData.charCodeAt(i);\n            }\n            const blob = new Blob([uint8Array], {\n              type: 'image/png'\n            });\n            this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(blob));\n          }\n        });\n        this.status = \"logout\";\n      }\n    });\n    this.logSer.adminLogged.subscribe(admin => {\n      if (admin == true) {\n        this.adminLoggedIn = true;\n      }\n    });\n    document.addEventListener(\"DOMContentLoaded\", function () {\n      window.addEventListener(\"scroll\", function () {\n        if (this.scrollY > 120) {\n          document.querySelector('#navbar')?.classList.add(\"sticky\");\n        } else {\n          document.querySelector('#navbar')?.classList.remove(\"sticky\");\n        }\n      });\n    });\n  }\n  clicked() {\n    if (this.status === \"logout\") {\n      localStorage.clear();\n      this._sanckBar.open('Logged out successfully.....', 'success', {\n        duration: 3000,\n        panelClass: ['mat-toolbar', 'mat-primary']\n      });\n      this.logSer.onFailure();\n      this.userName = '';\n      this.imageSrc = '';\n      this.isVisible = false;\n      this.adminLoggedIn = false;\n      this.router.navigateByUrl(\"/login\");\n      this.status = \"login\";\n    }\n  }\n  toCart() {\n    this.router.navigateByUrl(\"/cart\");\n  }\n  clickedList() {\n    if (!this.isVisible) {\n      this.isVisible = true;\n    } else {\n      this.isVisible = false;\n    }\n  }\n  navigate() {\n    if (this.adminLoggedIn) {\n      this.router.navigateByUrl(\"admin\");\n    } else {\n      this.router.navigateByUrl(\"\");\n    }\n  }\n  onSearchTextChanged(searchText) {\n    this.logSer.searchElement.emit(searchText);\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"mappings":"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","names":["Component","HeaderComponent","constructor","userService","sanitizer","logSer","router","_sanckBar","ngOnInit","status","userLoggedIn","subscribe","email","getUserName","data","userName","name","getProfileImg","imageData","binaryData","atob","arrayBuffer","ArrayBuffer","length","uint8Array","Uint8Array","i","charCodeAt","blob","Blob","type","imageSrc","bypassSecurityTrustUrl","URL","createObjectURL","adminLogged","admin","adminLoggedIn","document","addEventListener","window","scrollY","querySelector","classList","add","remove","clicked","localStorage","clear","open","duration","panelClass","onFailure","isVisible","navigateByUrl","toCart","clickedList","navigate","onSearchTextChanged","searchText","searchElement","emit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\header\\header.component.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Sanitizer } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { UserService } from '../service/user.service';\nimport { LoginService } from '../service/login.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent implements OnInit {\n  imageSrc:SafeUrl='';\n  status!:String;\n  adminLoggedIn=false;\n  userName:String = \"\";\n  isVisible:boolean =false;\n\n  constructor(private userService:UserService,private sanitizer:DomSanitizer,private logSer:LoginService,private router:Router,private _sanckBar:MatSnackBar){}\n  ngOnInit(): void {\n    this.status=\"login\";\n    this.logSer.userLoggedIn.subscribe((email:boolean)=>{      \n      if(email==true){\n        this.userService.getUserName().subscribe((data:any)=>{\n          this.userName = data.name;\n          });\n          this.userService.getProfileImg().subscribe((data:any)=>{\n            if(data && data.imageData){\n              const imageData = data.imageData;\n              const binaryData = atob(imageData);\n              const arrayBuffer = new ArrayBuffer(binaryData.length);\n              const uint8Array = new Uint8Array(arrayBuffer);\n              for (let i = 0; i < binaryData.length; i++) {\n                uint8Array[i] = binaryData.charCodeAt(i);\n              }\n              const blob = new Blob([uint8Array], { type: 'image/png' });\n              this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(blob));\n            }\n          });\n          \n      this.status=\"logout\";\n      }\n    });\n    this.logSer.adminLogged.subscribe((admin:boolean)=>{      \n      if(admin==true){\n      this.adminLoggedIn=true;\n      }\n    });\n\n    document.addEventListener(\"DOMContentLoaded\",function(){\n      window.addEventListener(\"scroll\",function(){\n        if(this.scrollY>120){\n          document.querySelector('#navbar')?.classList.add(\"sticky\");\n        }\n        else{\n          document.querySelector('#navbar')?.classList.remove(\"sticky\");\n        }\n      });\n    });\n  } \n  clicked(){\n    if(this.status===\"logout\"){\n      localStorage.clear();\n      this._sanckBar.open('Logged out successfully.....', 'success', {\n        duration: 3000,\n        panelClass: ['mat-toolbar', 'mat-primary']\n      });\n      this.logSer.onFailure();\n      this.userName='';\n      this.imageSrc='';\n      this.isVisible=false;\n      this.adminLoggedIn=false;\n      this.router.navigateByUrl(\"/login\");\n      this.status=\"login\";\n        }\n  }\n  toCart(){\n    this.router.navigateByUrl(\"/cart\");\n  }\n  clickedList(){\n    if(!this.isVisible){\n      this.isVisible=true;\n    }\n    else{\n      this.isVisible=false;\n    }\n  }\n  navigate(){\n    if(this.adminLoggedIn){\n      this.router.navigateByUrl(\"admin\");\n    }else{\n      this.router.navigateByUrl(\"\");\n    }\n  }\n  onSearchTextChanged(searchText:string){\n    this.logSer.searchElement.emit(searchText);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}