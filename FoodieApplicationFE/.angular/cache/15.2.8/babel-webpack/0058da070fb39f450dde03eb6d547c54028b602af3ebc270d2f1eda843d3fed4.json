{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // authUrl:String=\"http://localhost:9099/api/v1/auth\";\n    // userUrl:String=\"http://localhost:8090/api/v1/userService\";\n    this.authUrl = \"http://localhost:8081/api/v1/auth\";\n    this.userUrl = \"http://localhost:8081/api/v1/userService\";\n  }\n  login(loginData) {\n    return this.httpClient.post(`${this.authUrl}/login`, loginData);\n  }\n  registerUser(formData) {\n    return this.httpClient.post(`${this.userUrl}/register/user`, formData);\n  }\n  updateUser(formData) {\n    let httpHeader = new HttpHeaders({\n      \"Authorization\": \"Bearer \" + localStorage.getItem('Token')\n    });\n    let reqOption = {\n      headers: httpHeader\n    };\n    console.log(reqOption);\n    console.log(formData);\n    return this.httpClient.put(`${this.userUrl}/update/user`, formData, reqOption);\n  }\n  getProfileImg() {\n    let httpHeader = new HttpHeaders({\n      \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\n    });\n    let reqOption = {\n      headers: httpHeader\n    };\n    console.log(reqOption);\n    return this.httpClient.get(`${this.userUrl}/get/profile`, reqOption);\n  }\n  getUserName() {\n    let httpHeader = new HttpHeaders({\n      \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\n    });\n    let reqOption = {\n      headers: httpHeader\n    };\n    console.log(reqOption);\n    return this.httpClient.get(`${this.userUrl}/getName`, reqOption);\n  }\n  addItemToFavourites(itemData) {\n    let httpHeader = new HttpHeaders({\n      \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\n    });\n    let reqOption = {\n      headers: httpHeader\n    };\n    return this.httpClient.post(`${this.userUrl}/add/item`, itemData, reqOption);\n  }\n  getListOfFavourites() {\n    let httpHeader = new HttpHeaders({\n      \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\n    });\n    let reqOption = {\n      headers: httpHeader\n    };\n    return this.httpClient.get(`${this.userUrl}/get/user/favourite`, reqOption);\n  }\n  removeFavourite(itemRemoved) {\n    let httpHeader = new HttpHeaders({\n      \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\n    });\n    let reqOption = {\n      headers: httpHeader\n    };\n    return this.httpClient.delete(`${this.userUrl}/remove/favourite?itemId=${itemRemoved}`, reqOption);\n  }\n  checkFavourite(item) {\n    let httpHeader = new HttpHeaders({\n      \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\n    });\n    let reqOption = {\n      headers: httpHeader\n    };\n    return this.httpClient.get(`${this.userUrl}/check/favourite?itemId=${item}`, reqOption);\n  }\n  changeAddress(address) {\n    let httpHeader = new HttpHeaders({\n      \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\n    });\n    let reqOption = {\n      headers: httpHeader\n    };\n    return this.httpClient.post(`${this.userUrl}/add/item`, itemData, reqOption);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","UserService","constructor","httpClient","login","loginData","post","authUrl","registerUser","formData","userUrl","updateUser","httpHeader","localStorage","getItem","reqOption","headers","console","log","put","getProfileImg","get","getUserName","addItemToFavourites","itemData","getListOfFavourites","removeFavourite","itemRemoved","delete","checkFavourite","item","changeAddress","address","factory","providedIn"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\service\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Address } from '../model/address';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private httpClient:HttpClient) { }\n\n  // authUrl:String=\"http://localhost:9099/api/v1/auth\";\n  // userUrl:String=\"http://localhost:8090/api/v1/userService\";\n  authUrl:String=\"http://localhost:8081/api/v1/auth\";\n  userUrl:String=\"http://localhost:8081/api/v1/userService\";\n\n\n  login(loginData:any):Observable<any>{\n    return this.httpClient.post(`${this.authUrl}/login`,loginData);\n  }\n\n  registerUser(formData:FormData):Observable<any>{\n     return this.httpClient.post(`${this.userUrl}/register/user`,formData);\n  }\n  \n  updateUser(formData:FormData){\n    let httpHeader = new HttpHeaders({\n      \"Authorization\":\"Bearer \"+localStorage.getItem('Token')\n    });\n    let reqOption  = {headers:httpHeader}\n    console.log(reqOption);\n    console.log(formData);\n    \n    return this.httpClient.put(`${this.userUrl}/update/user`,formData,reqOption)\n  }\n\n  getProfileImg(){\n    let httpHeader = new HttpHeaders({\n      \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n    });\n    let reqOption  = {headers:httpHeader}\n    console.log(reqOption);\n    return this.httpClient.get(`${this.userUrl}/get/profile`,reqOption);\n  }\n\n  getUserName(){\n    let httpHeader = new HttpHeaders({\n      \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n    });\n    let reqOption  = {headers:httpHeader}\n    console.log(reqOption);\n    return this.httpClient.get(`${this.userUrl}/getName`,reqOption)\n  }\n  addItemToFavourites(itemData:any){\n    let httpHeader = new HttpHeaders({\n      \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n    });\n    let reqOption  = {headers:httpHeader}\n    return this.httpClient.post(`${this.userUrl}/add/item`,itemData,reqOption)\n  }\n  getListOfFavourites():Observable<Array<any>>{\n    let httpHeader = new HttpHeaders({\n      \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n    });\n    let reqOption  = {headers:httpHeader}    \n    return this.httpClient.get<Array<any>>(`${this.userUrl}/get/user/favourite`,reqOption)\n  }\n  removeFavourite(itemRemoved:any){\n    let httpHeader = new HttpHeaders({\n      \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n    });\n    let reqOption  = {headers:httpHeader}\n    return this.httpClient.delete(`${this.userUrl}/remove/favourite?itemId=${itemRemoved}`,reqOption);\n  }\n  checkFavourite(item:any){\n    let httpHeader = new HttpHeaders({\n      \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n    });\n    let reqOption  = {headers:httpHeader}\n    return this.httpClient.get(`${this.userUrl}/check/favourite?itemId=${item}`,reqOption);\n  }\n  changeAddress(address:Address){\n    let httpHeader = new HttpHeaders({\n      \"Authorization\":\"Bearer \"+localStorage.getItem('jwt')\n    });\n    let reqOption  = {headers:httpHeader}\n    return this.httpClient.post(`${this.userUrl}/add/item`,itemData,reqOption)\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}