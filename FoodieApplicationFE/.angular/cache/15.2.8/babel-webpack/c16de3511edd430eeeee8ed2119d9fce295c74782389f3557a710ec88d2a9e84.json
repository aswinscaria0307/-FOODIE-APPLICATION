{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../service/restaurant-service.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nexport class AddItemsComponent {\n  constructor(fb, service, route) {\n    this.fb = fb;\n    this.service = service;\n    this.route = route;\n    this.items = [];\n    this.addform = this.fb.group({\n      \"itemId\": ['', Validators.required],\n      \"itemName\": ['', Validators.required],\n      \"imageUrl\": ['', Validators.required],\n      \"itemPrice\": ['', Validators.required],\n      \"itemRating\": ['', Validators.required]\n    });\n  }\n  addItem() {\n    if (this.addform.valid) {\n      this.items.push(this.addform.value);\n      this.service.getId(this.restaurantId);\n      this.service.addItem(this.items, this.restaurantId).subscribe(response => {\n        alert(\"items are added successfully\");\n        this.items = [];\n        this.addform.reset();\n        this.route.navigateByUrl('/adminFoodItem');\n      }, error => {\n        alert(\"add all the details\");\n      });\n    }\n  }\n  view() {\n    this.route.navigateByUrl(\"/viewAdminItem\");\n  }\n  update() {\n    if (this.addform.valid) {\n      this.service.getId(this.restaurantId);\n      this.service.updateItem(this.addform.value, this.restaurantId).subscribe(response => {\n        alert(\"items have been updated\");\n        this.addform.reset();\n        this.route.navigateByUrl('/adminFoodItem');\n      }, error => {\n        alert(\"add all the items\");\n      });\n    }\n  }\n}\nAddItemsComponent.ɵfac = function AddItemsComponent_Factory(t) {\n  return new (t || AddItemsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RestaurantServiceService), i0.ɵɵdirectiveInject(i3.Router));\n};\nAddItemsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddItemsComponent,\n  selectors: [[\"app-add-items\"]],\n  decls: 29,\n  vars: 3,\n  consts: [[\"id\", \"formLogin\"], [\"id\", \"formBx\"], [2, \"color\", \"whitesmoke\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"restaurantId\", \"placeholder\", \"Enter restaurant Id\", \"required\", \"\", \"width\", \"500px\", 3, \"ngModel\", \"ngModelChange\"], [3, \"formGroup\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"itemId\", \"placeholder\", \"Enter item Id\", \"formControlName\", \"itemId\", \"required\", \"\", \"width\", \"500px\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"itemName\", \"placeholder\", \"Enter item name \", \"formControlName\", \"itemName\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"imageUrl\", \"placeholder\", \"ImageUrl of the food item\", \"formControlName\", \"imageUrl\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"itemPrice\", \"placeholder\", \"Enter price\", \"formControlName\", \"itemPrice\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"itemRating\", \"placeholder\", \"Rating\", \"formControlName\", \"itemRating\", \"required\", \"\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", 3, \"click\"]],\n  template: function AddItemsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\")(1, \"div\", 0)(2, \"div\", 1)(3, \"h2\", 2);\n      i0.ɵɵtext(4, \"Add new food item to the existing restaurant..\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-form-field\", 3)(6, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function AddItemsComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.restaurantId = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"form\", 5)(8, \"mat-form-field\", 3);\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵelementStart(11, \"mat-form-field\", 3);\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"br\");\n      i0.ɵɵelementStart(14, \"mat-form-field\", 3);\n      i0.ɵɵelement(15, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelementStart(17, \"mat-form-field\", 3);\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵelementStart(20, \"mat-form-field\", 3);\n      i0.ɵɵelement(21, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵelementStart(23, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function AddItemsComponent_Template_button_click_23_listener() {\n        return ctx.addItem();\n      });\n      i0.ɵɵtext(24, \"Add food Items\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"br\")(26, \"br\");\n      i0.ɵɵelementStart(27, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function AddItemsComponent_Template_button_click_27_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵtext(28, \"Update food items \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.restaurantId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.addform);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"disabled\", !ctx.addform.valid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.NgModel, i4.MatFormField, i5.MatInput, i6.MatButton],\n  styles: [\".example-card[_ngcontent-%COMP%] {\\r\\n    max-width: 550px;\\r\\n    text-align: center;\\r\\n    box-shadow: 5px 5px 5px 5px rgb(150, 138, 162);\\r\\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\\r\\n  }\\r\\n  .main[_ngcontent-%COMP%]{\\r\\n    margin-left: 300px;\\r\\n    padding: 5px;\\r\\n  }\\r\\n  h1[_ngcontent-%COMP%]{\\r\\n    background-color: rgb(110, 110, 218);\\r\\n    color: whitesmoke;\\r\\n    max-width: max-content;\\r\\n    margin-left: 90px;\\r\\n    border-radius: 5px;\\r\\n    padding: 15px;\\r\\n  }\\r\\n  section[_ngcontent-%COMP%]   #formLogin[_ngcontent-%COMP%]{\\r\\n    margin:auto;\\r\\n    width: 50%;\\r\\n    height: 100vh;\\r\\n    text-align:center;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    display: flex;\\r\\n    \\r\\n}\\r\\n#formBx[_ngcontent-%COMP%]{\\r\\n  background:#979696;\\r\\n  padding: 4%;\\r\\n  border-radius:6%;\\r\\n  box-shadow:10px 10px 190px -50px;\\r\\n  margin: 10px;\\r\\n  width: 60%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLWl0ZW1zL2FkZC1pdGVtcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQiw4Q0FBOEM7SUFDOUMsd0VBQXdFO0VBQzFFO0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsWUFBWTtFQUNkO0VBQ0E7SUFDRSxvQ0FBb0M7SUFDcEMsaUJBQWlCO0lBQ2pCLHNCQUFzQjtJQUN0QixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGFBQWE7RUFDZjtFQUNBO0lBQ0UsV0FBVztJQUNYLFVBQVU7SUFDVixhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsYUFBYTs7QUFFakI7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGdDQUFnQztFQUNoQyxZQUFZO0VBQ1osVUFBVTtBQUNaIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZCB7XHJcbiAgICBtYXgtd2lkdGg6IDU1MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggNXB4IHJnYigxNTAsIDEzOCwgMTYyKTtcclxuICAgIGZvbnQtZmFtaWx5OiAnRnJhbmtsaW4gR290aGljIE1lZGl1bScsICdBcmlhbCBOYXJyb3cnLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICB9XHJcbiAgLm1haW57XHJcbiAgICBtYXJnaW4tbGVmdDogMzAwcHg7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgfVxyXG4gIGgxe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDExMCwgMTEwLCAyMTgpO1xyXG4gICAgY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICBtYXgtd2lkdGg6IG1heC1jb250ZW50O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDkwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gIH1cclxuICBzZWN0aW9uICNmb3JtTG9naW57XHJcbiAgICBtYXJnaW46YXV0bztcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgXHJcbn1cclxuI2Zvcm1CeHtcclxuICBiYWNrZ3JvdW5kOiM5Nzk2OTY7XHJcbiAgcGFkZGluZzogNCU7XHJcbiAgYm9yZGVyLXJhZGl1czo2JTtcclxuICBib3gtc2hhZG93OjEwcHggMTBweCAxOTBweCAtNTBweDtcclxuICBtYXJnaW46IDEwcHg7XHJcbiAgd2lkdGg6IDYwJTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","AddItemsComponent","constructor","fb","service","route","group","required","addItem","addform","valid","items","push","value","getId","restaurantId","subscribe","response","alert","reset","navigateByUrl","error","view","update","updateItem","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\add-items\\add-items.component.ts","F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\add-items\\add-items.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { Router } from '@angular/router';\nimport { RestaurantServiceService } from '../service/restaurant-service.service';\n\n@Component({\n  selector: 'app-add-items',\n  templateUrl: './add-items.component.html',\n  styleUrls: ['./add-items.component.css']\n})\nexport class AddItemsComponent {\n  userLoggedIn?:string;\n\n  restaurantId:any;\n\n  items:any =[]\n\n  constructor(private fb:FormBuilder,private service:RestaurantServiceService,private route:Router){}\n\n  addform:any=this.fb.group({\n    \"itemId\":['',Validators.required],\n   \"itemName\" :['',Validators.required],\n   \"imageUrl\":['',Validators.required],\n  \"itemPrice\":['',Validators.required],\n  \"itemRating\":['',Validators.required]\n})\n\naddItem(){\n  if(this.addform.valid){\n    this.items.push(this.addform.value);\n    this.service.getId(this.restaurantId);\n    this.service.addItem(this.items,this.restaurantId).subscribe(\n      response=>{\n        alert(\"items are added successfully\");\n        this.items=[];\n        this.addform.reset();\n        this.route.navigateByUrl('/adminFoodItem');\n      },\n      error=>{\n        alert(\"add all the details\");\n      }\n    )\n  }\n \n}\n\nview(){\n  this.route.navigateByUrl(\"/viewAdminItem\");\n}\nupdate(){\n  if(this.addform.valid){\n    this.service.getId(this.restaurantId);\n    this.service.updateItem(this.addform.value,this.restaurantId).subscribe(\n      response=>{\n        alert(\"items have been updated\");\n        this.addform.reset();\n        this.route.navigateByUrl('/adminFoodItem');\n      },\n      error=>{\n        alert(\"add all the items\");\n      }\n    )\n  }\n}\n}\n","<section>\n    <div id=\"formLogin\">\n        <!-- <img id=\"svgImg\" src=\"../../assets/graph.png\" alt=\"\"> -->\n        <div id=\"formBx\">\n            <h2 style=\"color: whitesmoke;\">Add new food item to the existing restaurant..</h2>\n            <mat-form-field appearance=\"fill\"><input matInput type=\"text\" name=\"restaurantId\"\n                    placeholder=\"Enter restaurant Id\" required width=\"500px\"\n                    [(ngModel)]=\"restaurantId\"></mat-form-field>\n            <form [formGroup]=\"addform\" >\n                <mat-form-field appearance=\"fill\"><input matInput type=\"text\" name=\"itemId\" placeholder=\"Enter item Id\"\n                        formControlName=\"itemId\" required width=\"500px\"></mat-form-field>\n                <br>\n                <mat-form-field appearance=\"fill\"><input matInput type=\"text\" name=\"itemName\"\n                        placeholder=\"Enter item name \" formControlName=\"itemName\" required></mat-form-field><br>\n                <mat-form-field appearance=\"fill\"><input matInput type=\"text\" name=\"imageUrl\"\n                        placeholder=\"ImageUrl of the food item\" formControlName=\"imageUrl\" required></mat-form-field>\n                <br><mat-form-field appearance=\"fill\"><input matInput type=\"text\" name=\"itemPrice\" placeholder=\"Enter price\"\n                        formControlName=\"itemPrice\" required></mat-form-field>\n                <br><mat-form-field appearance=\"fill\"><input matInput type=\"number\" name=\"itemRating\" placeholder=\"Rating\"\n                        formControlName=\"itemRating\" required></mat-form-field>\n                <br>\n                <button type=\"submit\" mat-raised-button [disabled]=\"!addform.valid\" (click)=\"addItem()\">Add food\n                    Items</button>\n                <br><br>\n                <button mat-raised-button (click)=\"update()\">Update food items </button>\n            </form>\n        </div>\n    </div>\n</section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}