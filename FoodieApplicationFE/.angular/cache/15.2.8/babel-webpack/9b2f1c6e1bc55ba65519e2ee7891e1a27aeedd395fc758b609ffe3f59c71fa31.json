{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Order } from '../model/order';\nlet FavouritesComponent = class FavouritesComponent {\n  constructor(userSer, router, login, foodie, userService, _sanckBar) {\n    this.userSer = userSer;\n    this.router = router;\n    this.login = login;\n    this.foodie = foodie;\n    this.userService = userService;\n    this._sanckBar = _sanckBar;\n  }\n  ngOnInit() {\n    this.userSer.getListOfFavourites().subscribe({\n      next: data => {\n        console.log(data);\n        this.favList = data;\n      }\n    });\n  }\n  removeItem(data) {\n    this.userSer.removeFavourite(data).subscribe({\n      next: data => {\n        console.log(\"item removed\");\n        this.ngOnInit();\n        this.router.navigateByUrl(\"/favourite\");\n      }\n    });\n  }\n  addToOrder(theItem) {\n    if (this.login.isLoggedIn) {\n      this.addtocart = new Order();\n      this.addtocart.customerId = localStorage.getItem('email') ?? '';\n      this.addtocart.billingAddress = localStorage.getItem(\"address\") ?? '';\n      // let item:any=this.restaurantItems.find((item: { itemName: string; })=>item.itemName==itemName)\n      if (theItem) {\n        console.log(theItem);\n        theItem.status = \"incart\";\n        theItem.count = 1;\n        if (!this.addtocart.items) {\n          this.addtocart.items = [];\n        }\n        this.addtocart.items = this.addtocart.items.concat(theItem);\n        this.foodie.insertOrder(this.addtocart).subscribe(data => {\n          this._sanckBar.open(`Item Added to Cart`, 'success', {\n            duration: 3000,\n            panelClass: ['mat-toolbar', 'mat-primary']\n          });\n        });\n      }\n    }\n  }\n};\nFavouritesComponent = __decorate([Component({\n  selector: 'app-favourites',\n  templateUrl: './favourites.component.html',\n  styleUrls: ['./favourites.component.css']\n})], FavouritesComponent);\nexport { FavouritesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAMjD,SAASC,KAAK,QAAQ,gBAAgB;AAM/B,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAI9BC,YAAoBC,OAAmB,EAASC,MAAa,EAASC,KAAkB,EAASC,MAAoB,EAASC,WAAuB,EAASC,SAAqB;IAA/J,YAAO,GAAPL,OAAO;IAAqB,WAAM,GAANC,MAAM;IAAgB,UAAK,GAALC,KAAK;IAAsB,WAAM,GAANC,MAAM;IAAuB,gBAAW,GAAXC,WAAW;IAAqB,cAAS,GAATC,SAAS;EAAc;EAErLC,QAAQ;IACN,IAAI,CAACN,OAAO,CAACO,mBAAmB,EAAE,CAACC,SAAS,CAAC;MAC3CC,IAAI,EAACC,IAAI,IAAE;QACTC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QAChB,IAAI,CAACG,OAAO,GAAGH,IAAI;MACtB;KACD,CAAC;EAEJ;EACAI,UAAU,CAACJ,IAAQ;IAClB,IAAI,CAACV,OAAO,CAACe,eAAe,CAACL,IAAI,CAAC,CAACF,SAAS,CAAC;MAC5CC,IAAI,EAACC,IAAI,IAAE;QACTC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3B,IAAI,CAACN,QAAQ,EAAE;QACf,IAAI,CAACL,MAAM,CAACe,aAAa,CAAC,YAAY,CAAC;MACzC;KACA,CAAC;EACH;EAEAC,UAAU,CAACC,OAAW;IACpB,IAAG,IAAI,CAAChB,KAAK,CAACiB,UAAU,EAAC;MACvB,IAAI,CAACC,SAAS,GAAG,IAAIvB,KAAK,EAAE;MAC5B,IAAI,CAACuB,SAAS,CAACC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;MAC/D,IAAI,CAACH,SAAS,CAACI,cAAc,GAACF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAG,EAAE;MAClE;MACA,IAAIL,OAAO,EAAE;QACXP,OAAO,CAACC,GAAG,CAACM,OAAO,CAAC;QACpBA,OAAO,CAACO,MAAM,GAAC,QAAQ;QACvBP,OAAO,CAACQ,KAAK,GAAC,CAAC;QACf,IAAI,CAAC,IAAI,CAACN,SAAS,CAACO,KAAK,EAAE;UACzB,IAAI,CAACP,SAAS,CAACO,KAAK,GAAG,EAAE;;QAE3B,IAAI,CAACP,SAAS,CAACO,KAAK,GAAG,IAAI,CAACP,SAAS,CAACO,KAAK,CAACC,MAAM,CAACV,OAAO,CAAC;QAC3D,IAAI,CAACf,MAAM,CAAC0B,WAAW,CAAC,IAAI,CAACT,SAAS,CAAC,CAACZ,SAAS,CAACE,IAAI,IAAE;UACtD,IAAI,CAACL,SAAS,CAACyB,IAAI,CAAC,oBAAoB,EAAE,SAAS,EAAE;YACnDC,QAAQ,EAAE,IAAI;YACdC,UAAU,EAAE,CAAC,aAAa,EAAE,aAAa;WAC1C,CAAC;QACJ,CAAC,CAAC;;;EAIR;CAED;AAlDYlC,mBAAmB,eAL/BF,SAAS,CAAC;EACTqC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACWrC,mBAAmB,CAkD/B;SAlDYA,mBAAmB","names":["Component","Order","FavouritesComponent","constructor","userSer","router","login","foodie","userService","_sanckBar","ngOnInit","getListOfFavourites","subscribe","next","data","console","log","favList","removeItem","removeFavourite","navigateByUrl","addToOrder","theItem","isLoggedIn","addtocart","customerId","localStorage","getItem","billingAddress","status","count","items","concat","insertOrder","open","duration","panelClass","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\favourites\\favourites.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../service/user.service';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../service/login.service';\nimport { FoodieService } from '../service/foodie.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Order } from '../model/order';\n@Component({\n  selector: 'app-favourites',\n  templateUrl: './favourites.component.html',\n  styleUrls: ['./favourites.component.css']\n})\nexport class FavouritesComponent implements OnInit  {\n  favList:any;\n  addtocart!:Order;\n\n  constructor(private userSer:UserService,private router:Router,private login:LoginService,private foodie:FoodieService,private userService:UserService,private _sanckBar:MatSnackBar){}\n\n  ngOnInit(): void {\n    this.userSer.getListOfFavourites().subscribe({\n      next:data=>{\n        console.log(data);\n         this.favList = data;\n      } \n    })\n    \n  }\n  removeItem(data:any){\n   this.userSer.removeFavourite(data).subscribe({\n    next:data=>{\n      console.log(\"item removed\");\n      this.ngOnInit();\n      this.router.navigateByUrl(\"/favourite\")\n    }\n   })\n  }\n\n  addToOrder(theItem:any){\n    if(this.login.isLoggedIn){\n      this.addtocart = new Order();\n      this.addtocart.customerId = localStorage.getItem('email') ?? '';\n      this.addtocart.billingAddress=localStorage.getItem(\"address\")?? '';\n      // let item:any=this.restaurantItems.find((item: { itemName: string; })=>item.itemName==itemName)\n      if (theItem) {\n        console.log(theItem);\n        theItem.status=\"incart\";\n        theItem.count=1;\n        if (!this.addtocart.items) {\n          this.addtocart.items = [];\n        }\n        this.addtocart.items = this.addtocart.items.concat(theItem);\n        this.foodie.insertOrder(this.addtocart).subscribe(data=>{\n          this._sanckBar.open(`Item Added to Cart`, 'success', {\n            duration: 3000,\n            panelClass: ['mat-toolbar', 'mat-primary']\n          });\n        });\n        }\n  }\n  \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}