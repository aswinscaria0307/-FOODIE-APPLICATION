{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HeaderComponent = class HeaderComponent {\n  constructor(userService, sanitizer, logSer, router) {\n    this.userService = userService;\n    this.sanitizer = sanitizer;\n    this.logSer = logSer;\n    this.router = router;\n    this.imageSrc = '';\n    this.status = \"logout\";\n    this.userName = \"\";\n  }\n  ngOnInit() {\n    this.logSer.userLoggedIn.subscribe(email => {\n      if (email == true) {\n        this.status = \"logout\";\n      }\n    });\n    this.userService.getProfileImg().subscribe(data => {\n      if (data && data.imageData) {\n        const imageData = data.imageData;\n        const binaryData = atob(imageData);\n        const arrayBuffer = new ArrayBuffer(binaryData.length);\n        const uint8Array = new Uint8Array(arrayBuffer);\n        for (let i = 0; i < binaryData.length; i++) {\n          uint8Array[i] = binaryData.charCodeAt(i);\n        }\n        const blob = new Blob([uint8Array], {\n          type: 'image/png'\n        });\n        this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(blob));\n      }\n    });\n    this.userService.getUserName().subscribe(data => {\n      this.userName = data.name;\n    });\n  }\n  clicked() {\n    if (this.status === \"login\") {\n      localStorage.clear();\n      this.logSer.onFailure();\n      this.router.navigateByUrl(\"/login\");\n      this.status = \"logout\";\n    }\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAYrD,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YAAoBC,WAAuB,EAASC,SAAsB,EAASC,MAAmB,EAASC,MAAa;IAAxG,gBAAW,GAAXH,WAAW;IAAqB,cAAS,GAATC,SAAS;IAAsB,WAAM,GAANC,MAAM;IAAsB,WAAM,GAANC,MAAM;IAHrH,aAAQ,GAAS,EAAE;IACnB,WAAM,GAAQ,QAAQ;IACtB,aAAQ,GAAU,EAAE;EAC0G;EAC9HC,QAAQ;IACN,IAAI,CAACF,MAAM,CAACG,YAAY,CAACC,SAAS,CAAEC,KAAa,IAAG;MAClD,IAAGA,KAAK,IAAE,IAAI,EAAC;QACf,IAAI,CAACC,MAAM,GAAC,QAAQ;;IAEtB,CAAC,CAAC;IACF,IAAI,CAACR,WAAW,CAACS,aAAa,EAAE,CAACH,SAAS,CAAEI,IAAQ,IAAG;MACrD,IAAGA,IAAI,IAAIA,IAAI,CAACC,SAAS,EAAC;QACxB,MAAMA,SAAS,GAAGD,IAAI,CAACC,SAAS;QAChC,MAAMC,UAAU,GAAGC,IAAI,CAACF,SAAS,CAAC;QAClC,MAAMG,WAAW,GAAG,IAAIC,WAAW,CAACH,UAAU,CAACI,MAAM,CAAC;QACtD,MAAMC,UAAU,GAAG,IAAIC,UAAU,CAACJ,WAAW,CAAC;QAC9C,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,UAAU,CAACI,MAAM,EAAEG,CAAC,EAAE,EAAE;UAC1CF,UAAU,CAACE,CAAC,CAAC,GAAGP,UAAU,CAACQ,UAAU,CAACD,CAAC,CAAC;;QAE1C,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,UAAU,CAAC,EAAE;UAAEM,IAAI,EAAE;QAAW,CAAE,CAAC;QAC1D,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACvB,SAAS,CAACwB,sBAAsB,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC,CAAC;;IAEpF,CAAC,CAAC;IAEF,IAAI,CAACrB,WAAW,CAAC4B,WAAW,EAAE,CAACtB,SAAS,CAAEI,IAAQ,IAAG;MACrD,IAAI,CAACmB,QAAQ,GAAGnB,IAAI,CAACoB,IAAI;IAEzB,CAAC,CAAC;EACJ;EACAC,OAAO;IACL,IAAG,IAAI,CAACvB,MAAM,KAAG,OAAO,EAAC;MACvBwB,YAAY,CAACC,KAAK,EAAE;MACpB,IAAI,CAAC/B,MAAM,CAACgC,SAAS,EAAE;MACvB,IAAI,CAAC/B,MAAM,CAACgC,aAAa,CAAC,QAAQ,CAAC;MACnC,IAAI,CAAC3B,MAAM,GAAC,QAAQ;;EAExB;CAED;AAvCYV,eAAe,eAN3BD,SAAS,CAAC;EACTuC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GAEWxC,eAAe,CAuC3B;SAvCYA,eAAe","names":["Component","HeaderComponent","constructor","userService","sanitizer","logSer","router","ngOnInit","userLoggedIn","subscribe","email","status","getProfileImg","data","imageData","binaryData","atob","arrayBuffer","ArrayBuffer","length","uint8Array","Uint8Array","i","charCodeAt","blob","Blob","type","imageSrc","bypassSecurityTrustUrl","URL","createObjectURL","getUserName","userName","name","clicked","localStorage","clear","onFailure","navigateByUrl","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\header\\header.component.ts"],"sourcesContent":["import { Component, OnInit, Sanitizer } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { UserService } from '../service/user.service';\nimport { LoginService } from '../service/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent implements OnInit {\n  imageSrc:SafeUrl='';\n  status:String=\"logout\";\n  userName:String = \"\";\n  constructor(private userService:UserService,private sanitizer:DomSanitizer,private logSer:LoginService,private router:Router){}\n  ngOnInit(): void {\n    this.logSer.userLoggedIn.subscribe((email:boolean)=>{      \n      if(email==true){\n      this.status=\"logout\";\n      }\n    });\n    this.userService.getProfileImg().subscribe((data:any)=>{\n      if(data && data.imageData){\n        const imageData = data.imageData;\n        const binaryData = atob(imageData);\n        const arrayBuffer = new ArrayBuffer(binaryData.length);\n        const uint8Array = new Uint8Array(arrayBuffer);\n        for (let i = 0; i < binaryData.length; i++) {\n          uint8Array[i] = binaryData.charCodeAt(i);\n        }\n        const blob = new Blob([uint8Array], { type: 'image/png' });\n        this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(blob));\n      }\n    })\n\n    this.userService.getUserName().subscribe((data:any)=>{\n    this.userName = data.name;\n      \n    })\n  } \n  clicked(){\n    if(this.status===\"login\"){\n      localStorage.clear();\n      this.logSer.onFailure();\n      this.router.navigateByUrl(\"/login\")\n      this.status=\"logout\"\n        }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}