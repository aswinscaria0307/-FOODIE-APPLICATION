{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FoodieService {\n  constructor(http) {\n    this.http = http;\n    this.url1 = 'http://localhost:4545/api/v1/order/';\n    this.url2 = 'http://localhost:1122/api/v1/payment/';\n  }\n  getItems(status, email) {\n    const url = `${this.url1}getItems/${status}/${email}`;\n    return this.http.get(url);\n  }\n  addItem(email, item) {\n    let httpHeader = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n    });\n    let requestOptions = {\n      headers: httpHeader\n    };\n    const url = `${this.url1}addItem/${email}`;\n    return this.http.post(url, item, requestOptions);\n  }\n  removeItem(email, item) {\n    let httpHeader = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n    });\n    let requestOptions = {\n      headers: httpHeader\n    };\n    const url = `${this.url1}removeItem/${email}`;\n    return this.http.post(url, item, requestOptions);\n  }\n  createPaymentOrder(data) {\n    console.log(data);\n    const url = `${this.url2}createOrder`;\n    return this.http.post(url, data);\n  }\n}\nFoodieService.ɵfac = function FoodieService_Factory(t) {\n  return new (t || FoodieService)(i0.ɵɵinject(i1.HttpClient));\n};\nFoodieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FoodieService,\n  factory: FoodieService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAKxBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IACpB,IAAI,CAACC,IAAI,GAAE,qCAAqC;IAChD,IAAI,CAACC,IAAI,GAAE,uCAAuC;EACrD;EAEOC,QAAQ,CAACC,MAAa,EAACC,KAAiB;IAC9C,MAAMC,GAAG,GAAC,GAAG,IAAI,CAACL,IAAI,YAAYG,MAAM,IAAIC,KAAK,EAAE;IACnD,OAAO,IAAI,CAACL,IAAI,CAACO,GAAG,CAASD,GAAG,CAAC;EAClC;EAEOE,OAAO,CAACH,KAAiB,EAACI,IAAS;IACzC,IAAIC,UAAU,GAAC,IAAIC,WAAW,CAAC;MAC7B,eAAe,EAAC,SAAS,GAACC,YAAY,CAACC,OAAO,CAAC,KAAK;KACrD,CAAC;IACF,IAAIC,cAAc,GAAC;MAACC,OAAO,EAACL;IAAU,CAAC;IACvC,MAAMJ,GAAG,GAAC,GAAG,IAAI,CAACL,IAAI,WAAWI,KAAK,EAAE;IACxC,OAAO,IAAI,CAACL,IAAI,CAACgB,IAAI,CAAOV,GAAG,EAACG,IAAI,EAACK,cAAc,CAAC;EACrD;EAEOG,UAAU,CAACZ,KAAiB,EAACI,IAAS;IAC5C,IAAIC,UAAU,GAAC,IAAIC,WAAW,CAAC;MAC7B,eAAe,EAAC,SAAS,GAACC,YAAY,CAACC,OAAO,CAAC,KAAK;KACrD,CAAC;IACF,IAAIC,cAAc,GAAC;MAACC,OAAO,EAACL;IAAU,CAAC;IACvC,MAAMJ,GAAG,GAAC,GAAG,IAAI,CAACL,IAAI,cAAcI,KAAK,EAAE;IAC3C,OAAO,IAAI,CAACL,IAAI,CAACgB,IAAI,CAAOV,GAAG,EAACG,IAAI,EAACK,cAAc,CAAC;EACrD;EAEOI,kBAAkB,CAACC,IAAiB;IAC1CC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAEjB,MAAMb,GAAG,GAAC,GAAG,IAAI,CAACJ,IAAI,aAAa;IACnC,OAAO,IAAI,CAACF,IAAI,CAACgB,IAAI,CAAeV,GAAG,EAACa,IAAI,CAAC;EAC9C;;AAtCUrB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAwB,SAAbxB,aAAa;EAAAyB,YAFZ;AAAM","names":["FoodieService","constructor","http","url1","url2","getItems","status","email","url","get","addItem","item","httpHeader","HttpHeaders","localStorage","getItem","requestOptions","headers","post","removeItem","createPaymentOrder","data","console","log","factory","providedIn"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\service\\foodie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Item } from '../model/item';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodieService {\n  private url1:String;\n  private url2:String;\n\n\n  constructor(private http:HttpClient) {\n      this.url1= 'http://localhost:4545/api/v1/order/';\n      this.url2= 'http://localhost:1122/api/v1/payment/';\n   }\n\n   public getItems(status:String,email:String|null):Observable<Item[]>{\n    const url=`${this.url1}getItems/${status}/${email}`;\n    return this.http.get<Item[]>(url);\n   }\n\n   public addItem(email:String|null,item:Item):Observable<any>{\n    let httpHeader=new HttpHeaders({\n      'Authorization':'Bearer '+localStorage.getItem('jwt')\n    });\n    let requestOptions={headers:httpHeader}\n    const url=`${this.url1}addItem/${email}`;\n    return this.http.post<Item>(url,item,requestOptions);\n   }\n\n   public removeItem(email:String|null,item:Item):Observable<any>{\n    let httpHeader=new HttpHeaders({\n      'Authorization':'Bearer '+localStorage.getItem('jwt')\n    });\n    let requestOptions={headers:httpHeader}\n    const url=`${this.url1}removeItem/${email}`;\n    return this.http.post<Item>(url,item,requestOptions);\n   }\n\n   public createPaymentOrder(data:PaymentOrder){\n    console.log(data);\n    \n    const url=`${this.url2}createOrder`;\n    return this.http.post<PaymentOrder>(url,data);\n   }\n   \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}