{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { EventEmitter, Injectable } from '@angular/core';\nlet LoginService = class LoginService {\n  constructor(f) {\n    this.f = f;\n    this.isLoggedIn = false;\n    this.adminLoggedIn = false;\n    this.userLoggedIn = new EventEmitter();\n    this.adminLogged = new EventEmitter();\n    this.searchElement = new EventEmitter();\n    this.search = new EventEmitter();\n    this.cartCount = new EventEmitter();\n  }\n  loginSuccess() {\n    this.isLoggedIn = true;\n  }\n  onFailure() {\n    this.isLoggedIn = false;\n  }\n  adminLoginSuccess() {\n    this.adminLoggedIn = true;\n  }\n  adminOnFailure() {\n    this.adminLoggedIn = false;\n  }\n  getLoginStatus() {\n    if (this.isLoggedIn) {\n      this.userLoggedIn.emit(this.isLoggedIn);\n    }\n  }\n  admin() {\n    if (this.adminLoggedIn) {\n      this.adminLogged.emit(this.adminLoggedIn);\n    }\n  }\n  findCartCount() {\n    this.foodie.getItems(\"incart\", localStorage.getItem('email')).subscribe(response => {\n      this.items = response;\n    });\n  }\n};\nLoginService = __decorate([Injectable({\n  providedIn: 'root'\n})], LoginService);\nexport { LoginService };","map":{"version":3,"mappings":";AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,eAAe;AAKjD,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EASvBC,YAAoBC,CAAC;IAAD,MAAC,GAADA,CAAC;IAPrB,eAAU,GAAS,KAAK;IACxB,kBAAa,GAAS,KAAK;IAC3B,iBAAY,GAAuB,IAAIJ,YAAY,EAAE;IACrD,gBAAW,GAAuB,IAAIA,YAAY,EAAE;IACpD,kBAAa,GAAsB,IAAIA,YAAY,EAAE;IACrD,WAAM,GAAuB,IAAIA,YAAY,EAAE;IAC/C,cAAS,GAAsB,IAAIA,YAAY,EAAE;EACxB;EAEzBK,YAAY;IACV,IAAI,CAACC,UAAU,GAAC,IAAI;EACtB;EACAC,SAAS;IACP,IAAI,CAACD,UAAU,GAAC,KAAK;EACvB;EACAE,iBAAiB;IACf,IAAI,CAACC,aAAa,GAAC,IAAI;EACzB;EACAC,cAAc;IACZ,IAAI,CAACD,aAAa,GAAC,KAAK;EAC1B;EAEAE,cAAc;IACZ,IAAG,IAAI,CAACL,UAAU,EAAC;MACjB,IAAI,CAACM,YAAY,CAACC,IAAI,CAAC,IAAI,CAACP,UAAU,CAAC;;EAE3C;EACAQ,KAAK;IACH,IAAG,IAAI,CAACL,aAAa,EAAC;MACpB,IAAI,CAACM,WAAW,CAACF,IAAI,CAAC,IAAI,CAACJ,aAAa,CAAC;;EAE7C;EACAO,aAAa;IACX,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,QAAQ,EAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAE;MAC/E,IAAI,CAACC,KAAK,GAACD,QAAQ;IACrB,CAAC,CAAC;EACJ;CACD;AAvCYpB,YAAY,eAHxBD,UAAU,CAAC;EACVuB,UAAU,EAAE;CACb,CAAC,GACWtB,YAAY,CAuCxB;SAvCYA,YAAY","names":["EventEmitter","Injectable","LoginService","constructor","f","loginSuccess","isLoggedIn","onFailure","adminLoginSuccess","adminLoggedIn","adminOnFailure","getLoginStatus","userLoggedIn","emit","admin","adminLogged","findCartCount","foodie","getItems","localStorage","getItem","subscribe","response","items","providedIn"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\service\\login.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  isLoggedIn:boolean=false;\n  adminLoggedIn:boolean=false;\n  userLoggedIn:EventEmitter<boolean>=new EventEmitter();\n  adminLogged:EventEmitter<boolean>=new EventEmitter();\n  searchElement:EventEmitter<string>=new EventEmitter();\n  search:EventEmitter<boolean>=new EventEmitter();\n  cartCount:EventEmitter<number>=new EventEmitter();\n  constructor(private f) { }\n\n  loginSuccess(){\n    this.isLoggedIn=true;\n  }\n  onFailure(){\n    this.isLoggedIn=false;\n  }\n  adminLoginSuccess(){\n    this.adminLoggedIn=true;\n  }\n  adminOnFailure(){\n    this.adminLoggedIn=false;\n  }\n\n  getLoginStatus(){\n    if(this.isLoggedIn){      \n      this.userLoggedIn.emit(this.isLoggedIn)\n    }\n  }\n  admin(){\n    if(this.adminLoggedIn){      \n      this.adminLogged.emit(this.adminLoggedIn)\n    }\n  }\n  findCartCount(){\n    this.foodie.getItems(\"incart\",localStorage.getItem('email')).subscribe(response=>{\n      this.items=response; \n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}