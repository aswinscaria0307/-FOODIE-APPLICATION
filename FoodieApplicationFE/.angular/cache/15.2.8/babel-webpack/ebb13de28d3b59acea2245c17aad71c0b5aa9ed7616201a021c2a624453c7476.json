{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../service/restaurant-service.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nexport class AddRestaurantComponent {\n  constructor(fb, service, route) {\n    this.fb = fb;\n    this.service = service;\n    this.route = route;\n    this.restaurants = [];\n    // location = [\"Chennai\",\"Mumbai\",\"Kolkata\",\"Hyderabad\",\"Kerala\",\"Bangalore\",\"Delhi\"];\n    this.addform = this.fb.group({\n      restaurantId: ['', Validators.required],\n      restaurantName: ['', Validators.required],\n      imageUrl: ['', Validators.required],\n      location: ['', Validators.required],\n      rating: ['', Validators.required],\n      item: this.fb.group({\n        itemId: ['', Validators.required],\n        itemName: ['', Validators.required],\n        price: ['', Validators.required],\n        url: ['', Validators.required],\n        rating: ['', Validators.required]\n      })\n    });\n  }\n  addRestaurant() {\n    if (this.addform.valid) {\n      console.log(this.addform.value);\n      this.service.addRestaurant(this.addform.value).subscribe(response => {\n        alert(`restaurant is added successfully`);\n        this.route.navigateByUrl('/restaurantView');\n      }, error => {\n        alert('add all the particulars');\n      });\n    }\n  }\n  update() {\n    if (this.addform.valid) {\n      const id = 1;\n      this.service.updateRestaurant(this.addform.value, id).subscribe(response => {\n        alert(`restaurant has been updated`);\n        this.route.navigateByUrl('/restaurantView');\n      }, error => {\n        alert(`update is not possible`);\n      });\n    }\n  }\n  view() {\n    this.route.navigateByUrl('/restaurantView');\n  }\n  addItem() {\n    const id = 1;\n    this.service.getId(id);\n    this.route.navigateByUrl('/addItem');\n  }\n}\nAddRestaurantComponent.ɵfac = function AddRestaurantComponent_Factory(t) {\n  return new (t || AddRestaurantComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RestaurantServiceService), i0.ɵɵdirectiveInject(i3.Router));\n};\nAddRestaurantComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddRestaurantComponent,\n  selectors: [[\"app-add-restaurant\"]],\n  decls: 34,\n  vars: 3,\n  consts: [[2, \"margin-left\", \"1390px\", \"position\", \"relative\", \"margin-top\", \"-20px\", \"font-family\", \"'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\", \"font-weight\", \"bold\", \"font-size\", \"1.1rem\", \"text-transform\", \"uppercase\"], [2, \"padding\", \"15px\"], [\"id\", \"btn1\", \"mat-raised-button\", \"\", \"color\", \"primary\", 2, \"margin-left\", \"900px\", \"margin-bottom\", \"-500px\", 3, \"click\"], [1, \"main\"], [1, \"example-card\"], [2, \"width\", \"550px\", 3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"restaurantId\", \"placeholder\", \"Enter Restaurant Id\", \"formControlName\", \"restaurantId\", \"required\", \"\", \"width\", \"500px\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"location\", \"placeholder\", \"Enter location \", \"formControlName\", \"location\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"imageUrl\", \"placeholder\", \"ImageUrl of the restaurant\", \"formControlName\", \"imageUrl\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"restaurantName\", \"placeholder\", \"Enter Restaurant Name\", \"formControlName\", \"restaurantName\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"rating\", \"placeholder\", \"Rating\", \"formControlName\", \"rating\", \"required\", \"\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"disabled\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 2, \"margin-left\", \"500px\", \"padding\", \"25px\", 3, \"click\"]],\n  template: function AddRestaurantComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AddRestaurantComponent_Template_button_click_3_listener() {\n        return ctx.view();\n      });\n      i0.ɵɵtext(4, \"View Restaurants\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"h1\");\n      i0.ɵɵtext(7, \"Add Restaurant\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-card\", 4)(9, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function AddRestaurantComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.addRestaurant();\n      });\n      i0.ɵɵelementStart(10, \"mat-form-field\", 6);\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementStart(13, \"mat-form-field\", 6);\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"mat-form-field\", 6);\n      i0.ɵɵelement(17, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"br\");\n      i0.ɵɵelementStart(19, \"mat-form-field\", 6);\n      i0.ɵɵelement(20, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"br\");\n      i0.ɵɵelementStart(22, \"mat-form-field\", 6);\n      i0.ɵɵelement(23, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"br\");\n      i0.ɵɵelementStart(25, \"button\", 12);\n      i0.ɵɵtext(26, \"Add Restaurant\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"br\")(28, \"br\");\n      i0.ɵɵelementStart(29, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function AddRestaurantComponent_Template_button_click_29_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵtext(30, \"Update Restaurant \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(31, \"div\")(32, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function AddRestaurantComponent_Template_button_click_32_listener() {\n        return ctx.addItem();\n      });\n      i0.ɵɵtext(33, \"Add Food items \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.userLoggedIn, \"\");\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.addform);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"disabled\", !ctx.addform.valid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i4.MatFormField, i5.MatInput, i6.MatButton, i7.MatCard],\n  styles: [\".example-card[_ngcontent-%COMP%] {\\r\\n    \\r\\n    max-width: 550px;\\r\\n    \\r\\n    text-align: center;\\r\\n    \\r\\n    \\r\\n    \\r\\n    box-shadow: 5px 5px 5px 5px rgb(150, 138, 162);\\r\\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\\r\\n  }\\r\\n  .main[_ngcontent-%COMP%]{\\r\\n    margin-left: 300px;\\r\\n    \\r\\n    padding: 5px;\\r\\n  }\\r\\n  h1[_ngcontent-%COMP%]{\\r\\n    background-color: rgb(110, 110, 218);\\r\\n    color: whitesmoke;\\r\\n    max-width: max-content;\\r\\n    margin-left: 180px;\\r\\n    border-radius: 5px;\\r\\n    padding: 15px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLXJlc3RhdXJhbnQvYWRkLXJlc3RhdXJhbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHNCQUFzQjtJQUN0QixnQkFBZ0I7SUFDaEIsMEJBQTBCO0lBQzFCLGtCQUFrQjtJQUNsQix3QkFBd0I7SUFDeEIsa0JBQWtCO0lBQ2xCLG9CQUFvQjtJQUNwQiw4Q0FBOEM7SUFDOUMsd0VBQXdFO0VBQzFFO0VBQ0E7SUFDRSxrQkFBa0I7SUFDbEIsMEJBQTBCO0lBQzFCLFlBQVk7RUFDZDtFQUNBO0lBQ0Usb0NBQW9DO0lBQ3BDLGlCQUFpQjtJQUNqQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixhQUFhO0VBQ2YiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jYXJkIHtcclxuICAgIC8qIG1hcmdpbi10b3A6IDMwcHg7ICovXHJcbiAgICBtYXgtd2lkdGg6IDU1MHB4O1xyXG4gICAgLyogZGlzcGxheTogaW5saW5lLWZsZXg7ICovXHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAvKiBtYXJnaW4tbGVmdDogNTAwcHg7ICovXHJcbiAgICAvKiBtYXJnaW46IDEwcHg7ICovXHJcbiAgICAvKiBwYWRkaW5nOiAxMDBweDsgKi9cclxuICAgIGJveC1zaGFkb3c6IDVweCA1cHggNXB4IDVweCByZ2IoMTUwLCAxMzgsIDE2Mik7XHJcbiAgICBmb250LWZhbWlseTogJ0ZyYW5rbGluIEdvdGhpYyBNZWRpdW0nLCAnQXJpYWwgTmFycm93JywgQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgfVxyXG4gIC5tYWlue1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMwMHB4O1xyXG4gICAgLyogbWFyZ2luLWJvdHRvbTogNTAwcHg7ICovXHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgfVxyXG4gIGgxe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDExMCwgMTEwLCAyMTgpO1xyXG4gICAgY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICBtYXgtd2lkdGg6IG1heC1jb250ZW50O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE4MHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","AddRestaurantComponent","constructor","fb","service","route","group","restaurantId","required","restaurantName","imageUrl","location","rating","item","itemId","itemName","price","url","addRestaurant","addform","valid","console","log","value","subscribe","response","alert","navigateByUrl","error","update","id","updateRestaurant","view","addItem","getId","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\add-restaurant\\add-restaurant.component.ts","F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\add-restaurant\\add-restaurant.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { Router } from '@angular/router';\nimport { RestaurantServiceService } from '../service/restaurant-service.service';\n\n@Component({\n  selector: 'app-add-restaurant',\n  templateUrl: './add-restaurant.component.html',\n  styleUrls: ['./add-restaurant.component.css']\n})\nexport class AddRestaurantComponent {\n\n  constructor(private fb:FormBuilder,private service:RestaurantServiceService,private route:Router){}\n\n  userLoggedIn?:string;\n  restaurants:any=[];\n\n  // location = [\"Chennai\",\"Mumbai\",\"Kolkata\",\"Hyderabad\",\"Kerala\",\"Bangalore\",\"Delhi\"];\n  addform = this.fb.group({\n    restaurantId: ['', Validators.required],\n    restaurantName: ['', Validators.required],\n    imageUrl: ['', Validators.required],\n    location: ['', Validators.required],\n    rating: ['', Validators.required],\n    item: this.fb.group({\n      itemId: ['', Validators.required],\n      itemName: ['', Validators.required],\n      price: ['', Validators.required],\n      url: ['', Validators.required],\n      rating: ['', Validators.required]\n    })\n  });\n  \n\naddRestaurant(){\n  if(this.addform.valid){\n    console.log(this.addform.value);\n    this.service.addRestaurant(this.addform.value).subscribe(\n      response=>{\n        alert(`restaurant is added successfully`);\n        this.route.navigateByUrl('/restaurantView');\n      },\n      error=>{\n        alert('add all the particulars');\n      }\n    )\n  }\n}\n\nupdate(){\n  if(this.addform.valid){\n    const id = 1;\n    this.service.updateRestaurant(this.addform.value,id).subscribe(\n      response=>{\n        alert(`restaurant has been updated`);\n        this.route.navigateByUrl('/restaurantView');\n      },\n      error=>{\n        alert(`update is not possible`);\n      }\n    )\n  }\n}\n\nview(){\n  this.route.navigateByUrl('/restaurantView')\n}\n\naddItem(){\n  const id=1;\n  this.service.getId(id);\n  this.route.navigateByUrl('/addItem');\n}\n}\n","<div\n    style=\"margin-left: 1390px; position: relative; margin-top: -20px; font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;font-weight: bold;font-size: 1.1rem;text-transform: uppercase;\">\n    {{userLoggedIn}}</div>\n<div style=\"padding: 15px;\">\n    <button id=\"btn1\" mat-raised-button color=\"primary\" (click)=\"view()\"\n        style=\"margin-left: 900px; margin-bottom: -500px;\">View Restaurants</button>\n</div>\n<div class=\"main\">\n    <h1>Add Restaurant</h1>\n    <mat-card class=\"example-card\">\n        <form [formGroup]=\"addform\" (ngSubmit)=\"addRestaurant()\" style=\"width: 550px;\">\n            <mat-form-field  appearance=\"fill\"><input matInput type=\"text\" name=\"restaurantId\" placeholder=\"Enter Restaurant Id\" \n                    formControlName=\"restaurantId\" required width=\"500px\" ></mat-form-field>\n            <br>\n            <mat-form-field appearance=\"fill\"><input matInput type=\"text\" name=\"location\"\n                placeholder=\"Enter location \" formControlName=\"location\" required></mat-form-field><br>\n            <mat-form-field appearance=\"fill\"><input matInput type=\"text\" name=\"imageUrl\"\n                    placeholder=\"ImageUrl of the restaurant\" formControlName=\"imageUrl\" required></mat-form-field>\n            <br><mat-form-field appearance=\"fill\"><input matInput type=\"text\" name=\"restaurantName\"\n                    placeholder=\"Enter Restaurant Name\" formControlName=\"restaurantName\" required></mat-form-field>\n            <br><mat-form-field appearance=\"fill\"><input matInput type=\"number\" name=\"rating\" placeholder=\"Rating\"\n                    formControlName=\"rating\" required></mat-form-field>\n            <br>\n            <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"!addform.valid\">Add Restaurant</button>\n            <br><br>\n            <button mat-raised-button color=\"accent\" (click)=\"update()\">Update Restaurant </button>\n        </form>\n    </mat-card>\n</div>\n<div>\n    <button style=\"margin-left: 500px;padding: 25px;\" mat-raised-button color=\"primary\" (click)=\"addItem()\">Add Food items </button>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}