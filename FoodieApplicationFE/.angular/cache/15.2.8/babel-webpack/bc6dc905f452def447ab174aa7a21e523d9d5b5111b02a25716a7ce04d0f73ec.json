{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/login.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(auth, route) {\n    this.auth = auth;\n    this.route = route;\n  }\n  canActivate(route, state) {\n    if (this.auth.isLoggedIn) {\n      return true;\n    } else {\n      this.route.navigate(['/login']);\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,IAAiB,EAASC,KAAY;IAAtC,SAAI,GAAJD,IAAI;IAAsB,UAAK,GAALC,KAAK;EAAS;EAC5DC,WAAW,CACTD,KAA6B,EAC7BE,KAA0B;IACxB,IAAG,IAAI,CAACH,IAAI,CAACI,UAAU,EAAC;MACtB,OAAO,IAAI;KACZ,MAAI;MACH,IAAI,CAACH,KAAK,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAElB;;AAXWP,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAQ,SAATR,SAAS;EAAAS,YAFR;AAAM","names":["AuthGuard","constructor","auth","route","canActivate","state","isLoggedIn","navigate","factory","providedIn"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\BCKUP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\guard\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Route, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../service/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth:LoginService,private route:Router){}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(this.auth.isLoggedIn){\n        return true;\n      }else{\n        this.route.navigate(['/login']);\n        return false;\n      }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}