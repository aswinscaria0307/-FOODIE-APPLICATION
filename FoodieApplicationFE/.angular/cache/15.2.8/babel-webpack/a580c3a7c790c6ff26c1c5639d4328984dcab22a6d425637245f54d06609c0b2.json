{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet RestaurantViewComponent = class RestaurantViewComponent {\n  constructor(service, route, activatedRoute) {\n    this.service = service;\n    this.route = route;\n    this.activatedRoute = activatedRoute;\n    this.searchedItems = [];\n    this.searchedRestaurants = [];\n    this.restaurants = [];\n  }\n  ngOnInit() {\n    this.service.getAllRestaurant().subscribe(response => {\n      this.restaurants = response;\n    }, error => {\n      alert(\"error!!!!\");\n    });\n  }\n  getItems(id) {\n    this.service.getId(id);\n    this.route.navigateByUrl('/viewItem');\n  }\n  getLocation(location) {\n    this.getLocation(location);\n    this.service.getRestaurantByLocation(location).subscribe(response => {\n      const restaurantArray = response;\n      if (location && location !== '') {\n        this.restaurants = restaurantArray.filter(restaurant => restaurant.location === location);\n      } else {\n        this.restaurants = restaurantArray;\n        console.log(restaurantArray);\n      }\n    }, error => {\n      alert(\"error!!!!\");\n    });\n  }\n  onSearchTextChanged(searchText) {\n    if (searchText || searchText !== '') {\n      this.searchedItems = this.restaurants.filter(restaurant => {\n        return restaurant.items.some(item => {\n          return item.itemName.toLowerCase().includes(searchText.toLowerCase());\n        });\n      });\n    }\n    if (searchText || searchText !== '') {\n      this.searchedRestaurants = this.restaurants.filter(restaurant => {\n        return restaurant.restaurantName.toLowerCase().includes(searchText.toLowerCase());\n      });\n    }\n    console.log(this.searchedItems);\n    console.log(this.searchedRestaurants);\n  }\n};\n__decorate([Input('restaurants')], RestaurantViewComponent.prototype, \"restaurants\", void 0);\nRestaurantViewComponent = __decorate([Component({\n  selector: 'app-restaurant-view',\n  templateUrl: './restaurant-view.component.html',\n  styleUrls: ['./restaurant-view.component.css']\n})], RestaurantViewComponent);\nexport { RestaurantViewComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,eAAe;AASzC,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAClCC,YAAoBC,OAAgC,EAASC,KAAY,EAASC,cAA6B;IAA3F,YAAO,GAAPF,OAAO;IAAkC,UAAK,GAALC,KAAK;IAAgB,mBAAc,GAAdC,cAAc;IAEhG,kBAAa,GAAK,EAAE;IACpB,wBAAmB,GAAK,EAAE;IAkBF,gBAAW,GAAO,EAAE;EApB5C;EAIAC,QAAQ;IACN,IAAI,CAACH,OAAO,CAACI,gBAAgB,EAAE,CAACC,SAAS,CACvCC,QAAQ,IAAE;MACR,IAAI,CAACC,WAAW,GAACD,QAAQ;IAC3B,CAAC,EACDE,KAAK,IAAE;MACLC,KAAK,CAAC,WAAW,CAAC;IACpB,CAAC,CACF;EACH;EAEAC,QAAQ,CAACC,EAAS;IAChB,IAAI,CAACX,OAAO,CAACY,KAAK,CAACD,EAAE,CAAC;IACtB,IAAI,CAACV,KAAK,CAACY,aAAa,CAAC,WAAW,CAAC;EACrC;EAIAC,WAAW,CAACC,QAAY;IACtB,IAAI,CAACD,WAAW,CAACC,QAAQ,CAAC;IAC1B,IAAI,CAACf,OAAO,CAACgB,uBAAuB,CAACD,QAAQ,CAAC,CAACV,SAAS,CACrDC,QAAgB,IAAI;MACnB,MAAMW,eAAe,GAAGX,QAAiB;MACzC,IAAGS,QAAQ,IAAIA,QAAQ,KAAK,EAAE,EAAC;QAC7B,IAAI,CAACR,WAAW,GAAGU,eAAe,CAACC,MAAM,CAAEC,UAAc,IAAKA,UAAU,CAACJ,QAAQ,KAAKA,QAAQ,CAAC;OAChG,MAAM;QACL,IAAI,CAACR,WAAW,GAAGU,eAAe;QAClCG,OAAO,CAACC,GAAG,CAACJ,eAAe,CAAC;;IAGhC,CAAC,EACDT,KAAK,IAAE;MACLC,KAAK,CAAC,WAAW,CAAC;IACpB,CAAC,CACF;EACH;EAGAa,mBAAmB,CAACC,UAAiB;IACzB,IAAGA,UAAU,IAAIA,UAAU,KAAK,EAAE,EAAC;MACjC,IAAI,CAACC,aAAa,GAAC,IAAI,CAACjB,WAAW,CAACW,MAAM,CAAEC,UAAc,IAAG;QAC3D,OAAOA,UAAU,CAACM,KAAK,CAACC,IAAI,CAAEC,IAAQ,IAAG;UACvC,OAAOA,IAAI,CAACC,QAAQ,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,EAAE,CAAC;QACvE,CAAC,CAAC;MACJ,CAAC,CAAC;;IAEJ,IAAGN,UAAU,IAAIA,UAAU,KAAK,EAAE,EAAC;MACjC,IAAI,CAACQ,mBAAmB,GAAC,IAAI,CAACxB,WAAW,CAACW,MAAM,CAAEC,UAAc,IAAG;QAC/D,OAAOA,UAAU,CAACa,cAAc,CAACH,WAAW,EAAE,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,EAAE,CAAC;MACnF,CAAC,CAAC;;IAENT,OAAO,CAACC,GAAG,CAAC,IAAI,CAACG,aAAa,CAAC;IAC/BJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACU,mBAAmB,CAAC;EAGvC;CAEb;AAzCyBE,YAArBpC,KAAK,CAAC,aAAa,CAAC,4DAAsB;AAtBlCC,uBAAuB,eALnCF,SAAS,CAAC;EACTsC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,GACWtC,uBAAuB,CA+DnC;SA/DYA,uBAAuB","names":["Component","Input","RestaurantViewComponent","constructor","service","route","activatedRoute","ngOnInit","getAllRestaurant","subscribe","response","restaurants","error","alert","getItems","id","getId","navigateByUrl","getLocation","location","getRestaurantByLocation","restaurantArray","filter","restaurant","console","log","onSearchTextChanged","searchText","searchedItems","items","some","item","itemName","toLowerCase","includes","searchedRestaurants","restaurantName","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\restaurant-view\\restaurant-view.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { RestaurantServiceService } from '../service/restaurant-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-restaurant-view',\n  templateUrl: './restaurant-view.component.html',\n  styleUrls: ['./restaurant-view.component.css']\n})\nexport class RestaurantViewComponent {\n  constructor(private service:RestaurantServiceService,private route:Router,private activatedRoute:ActivatedRoute){\n  }\n  searchedItems:any=[];\n  searchedRestaurants:any=[];\n\n  ngOnInit(): void {\n    this.service.getAllRestaurant().subscribe(\n      response=>{\n        this.restaurants=response;\n      },\n      error=>{\n        alert(\"error!!!!\");\n      }\n    )\n  }\n\n  getItems(id:number) {\n    this.service.getId(id);\n    this.route.navigateByUrl('/viewItem');\n    }\n\n    @Input('restaurants') restaurants:any = [];\n\n    getLocation(location:any){\n      this.getLocation(location);\n      this.service.getRestaurantByLocation(location).subscribe(\n        (response: Object) => {\n          const restaurantArray = response as any[];\n          if(location && location !== ''){\n            this.restaurants = restaurantArray.filter((restaurant:any) => restaurant.location === location);\n          } else {\n            this.restaurants = restaurantArray;\n            console.log(restaurantArray);\n            \n          }\n        },\n        error=>{\n          alert(\"error!!!!\");\n        }\n      )\n    }\n\n\n    onSearchTextChanged(searchText:string) {\n                if(searchText || searchText !== ''){\n                  this.searchedItems=this.restaurants.filter((restaurant:any)=>{\n                    return restaurant.items.some((item:any)=>{\n                      return item.itemName.toLowerCase().includes(searchText.toLowerCase());\n                    });\n                  });\n                }\n                if(searchText || searchText !== ''){\n                  this.searchedRestaurants=this.restaurants.filter((restaurant:any)=>{\n                      return restaurant.restaurantName.toLowerCase().includes(searchText.toLowerCase());\n                    });\n                }\n                console.log(this.searchedItems);\n                console.log(this.searchedRestaurants);\n                \n                \n              }\n          \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}