{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/restaurant-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/card\";\nfunction RestaurantViewComponent_mat_card_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 3);\n    i0.ɵɵlistener(\"click\", function RestaurantViewComponent_mat_card_3_Template_mat_card_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const restaurant_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.getItems(restaurant_r1.restaurantId));\n    });\n    i0.ɵɵelement(1, \"img\", 4);\n    i0.ɵɵelementStart(2, \"h2\", 5)(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"h3\")(7, \"div\", 6);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"a\", 7)(10, \"div\", 1)(11, \"div\", 8);\n    i0.ɵɵtext(12);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(13, \"svg\", 9);\n    i0.ɵɵelement(14, \"path\", 10)(15, \"path\", 11);\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const restaurant_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", restaurant_r1.imageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", restaurant_r1.restaurantName, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Location: \", restaurant_r1.location, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Rating: \", restaurant_r1.rating, \" \");\n  }\n}\nexport class RestaurantViewComponent {\n  constructor(service, route, activatedRoute) {\n    this.service = service;\n    this.route = route;\n    this.activatedRoute = activatedRoute;\n    this.restaurants = [];\n  }\n  ngOnInit() {\n    this.service.getAllRestaurant().subscribe(response => {\n      this.restaurants = response;\n    }, error => {\n      alert(\"error!!!!\");\n    });\n  }\n  getItems(id) {\n    this.service.getId(id);\n    this.route.navigateByUrl('/viewItem');\n  }\n  getLocation(location) {\n    this.getLocation(location);\n    this.service.getRestaurantByLocation(location).subscribe(response => {\n      const restaurantArray = response;\n      if (location && location !== '') {\n        this.restaurants = restaurantArray.filter(restaurant => restaurant.location === location);\n      } else {\n        this.restaurants = restaurantArray;\n        console.log(restaurantArray);\n      }\n    }, error => {\n      alert(\"error!!!!\");\n    });\n  }\n}\nRestaurantViewComponent.ɵfac = function RestaurantViewComponent_Factory(t) {\n  return new (t || RestaurantViewComponent)(i0.ɵɵdirectiveInject(i1.RestaurantServiceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nRestaurantViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RestaurantViewComponent,\n  selectors: [[\"app-restaurant-view\"]],\n  inputs: {\n    restaurants: \"restaurants\"\n  },\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"background\"], [2, \"text-align\", \"center\"], [\"class\", \"example-card\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"example-card\", 3, \"click\"], [\"mat-card-image\", \"\", \"width\", \"400px\", \"height\", \"250px\", 3, \"src\"], [2, \"text-align\", \"center\", \"text-transform\", \"uppercase\", \"font-family\", \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\", \"color\", \"rgb(0, 0, 0)\", \"font-weight\", \"bolder\"], [2, \"text-align\", \"left\"], [\"target\", \"_blank\", \"rel\", \"noopener\", 2, \"color\", \"black\"], [1, \"github-star-badge\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"24\", \"height\", \"24\", \"viewBox\", \"0 0 24 24\", 1, \"material-icons\", 2, \"background-color\", \"rgb(149, 214, 149)\"], [\"d\", \"M0 0h24v24H0z\", \"fill\", \"none\"], [\"d\", \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"]],\n  template: function RestaurantViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Have a delicious food at available restaurants !!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, RestaurantViewComponent_mat_card_3_Template, 16, 4, \"mat-card\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.restaurants);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.MatCard, i4.MatCardContent, i4.MatCardImage],\n  styles: [\".example-card[_ngcontent-%COMP%] {\\r\\n    max-width: 400px;\\r\\n    display: inline-block;\\r\\n    margin-left: 100px;\\r\\n    margin-top: 50px;\\r\\n    \\r\\n    \\r\\n    \\r\\n    box-shadow: 5px 5px 5px 5px rgb(109, 105, 113);\\r\\n  }\\r\\n  h3[_ngcontent-%COMP%]{\\r\\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n  a[_ngcontent-%COMP%]:hover {\\r\\n    color: #125699;\\r\\n  }\\r\\n    .github-star-badge[_ngcontent-%COMP%] {\\r\\n    color: #24292e;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    font-size: 20px;\\r\\n    padding: 3px 10px;\\r\\n    \\r\\n    \\r\\n    margin-left: 200px;\\r\\n    font-weight: 800;\\r\\n    margin-top: -20px;\\r\\n  }\\r\\n\\r\\n  \\r\\n    \\r\\n   \\r\\n\\r\\n  .github-star-badge[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%] {\\r\\n    height: 16px;\\r\\n    width: 16px;\\r\\n    margin-right: 4px;\\r\\n    color: white;\\r\\n  }\\r\\n  h1[_ngcontent-%COMP%]{\\r\\n    color: black;\\r\\n    padding-top: 15px;\\r\\n    \\r\\n    font-family: cursive;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  \\r\\n  \\r\\n  \\r\\n\\r\\n  .background[_ngcontent-%COMP%]{\\r\\n    width: 100%;\\r\\n    \\r\\n    height: 100%;\\r\\n    \\r\\n    \\r\\n    \\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVzdGF1cmFudC12aWV3L3Jlc3RhdXJhbnQtdmlldy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixtQkFBbUI7O0lBRW5CLDhDQUE4QztFQUNoRDtFQUNBO0lBQ0UsNkVBQTZFO0lBQzdFLGlCQUFpQjtBQUNyQjs7RUFFRTtJQUNFLGNBQWM7RUFDaEI7SUFDRTtJQUNBLGNBQWM7SUFDZCxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixpQkFBaUI7SUFDakI7eUJBQ3FCO0lBQ3JCLG9FQUFvRTtJQUNwRSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtFQUNuQjs7RUFFQTs7MENBRXdDO0lBQ3RDLGdDQUFnQztFQUNsQyxNQUFNOztFQUVOO0lBQ0UsWUFBWTtJQUNaLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsWUFBWTtFQUNkO0VBQ0E7SUFDRSxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLHNCQUFzQjtJQUN0QixvQkFBb0I7SUFDcEIsaUJBQWlCO0VBQ25COztFQUVBOzs7S0FHRzs7RUFFSCxzSEFBc0g7O0VBRXRIO0lBQ0UsV0FBVztJQUNYLDRCQUE0QjtJQUM1QixZQUFZO0lBQ1osa0NBQWtDO0lBQ2xDO2lDQUM2QjtJQUM3QixxSEFBcUg7RUFDdkg7RUFDQSxrTkFBa047O0FBRXBOLDBOQUEwTjtBQUMxTiwySEFBMkg7QUFDM0gseVBBQXlQIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZCB7XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogNTBweDtcclxuICAgIC8qIG1hcmdpbjogNTBweDsgKi9cclxuICAgIC8qIHBhZGRpbmc6IDE1cHg7ICovXHJcbiAgICBcclxuICAgIGJveC1zaGFkb3c6IDVweCA1cHggNXB4IDVweCByZ2IoMTA5LCAxMDUsIDExMyk7XHJcbiAgfVxyXG4gIGgze1xyXG4gICAgZm9udC1mYW1pbHk6ICdHaWxsIFNhbnMnLCAnR2lsbCBTYW5zIE1UJywgQ2FsaWJyaSwgJ1RyZWJ1Y2hldCBNUycsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuICBhOmhvdmVyIHtcclxuICAgIGNvbG9yOiAjMTI1Njk5O1xyXG4gIH1cclxuICAgIC5naXRodWItc3Rhci1iYWRnZSB7XHJcbiAgICBjb2xvcjogIzI0MjkyZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgcGFkZGluZzogM3B4IDEwcHg7XHJcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI3LDMxLDM1LC4yKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDNweDsgKi9cclxuICAgIC8qIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgtMTgwZGVnLCNmYWZiZmMsI2VmZjNmNiA5MCUpOyAqL1xyXG4gICAgbWFyZ2luLWxlZnQ6IDIwMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcclxuICAgIG1hcmdpbi10b3A6IC0yMHB4O1xyXG4gIH1cclxuXHJcbiAgLyogLmdpdGh1Yi1zdGFyLWJhZGdlOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgtMTgwZGVnLCNmMGYzZjYsI2U2ZWJmMSA5MCUpO1xyXG4gICAgLyogYm9yZGVyLWNvbG9yOiByZ2JhKDI3LDMxLDM1LC4zNSk7ICovXHJcbiAgICAvKiBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtLjVlbTsgKi9cclxuICAvKiB9ICovIFxyXG5cclxuICAuZ2l0aHViLXN0YXItYmFkZ2UgLm1hdGVyaWFsLWljb25zIHtcclxuICAgIGhlaWdodDogMTZweDtcclxuICAgIHdpZHRoOiAxNnB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA0cHg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4gIGgxe1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgcGFkZGluZy10b3A6IDE1cHg7XHJcbiAgICAvKiBtYXJnaW4tdG9wOiA1MHB4OyAqL1xyXG4gICAgZm9udC1mYW1pbHk6IGN1cnNpdmU7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcblxyXG4gIC8qIC5iYWNrZ3JvdW5ke1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2IoMjQ5LCAyMDgsIDI0KSxyZ2IoMTQ1LCA1NiwgMjE4KSk7XHJcbiAgfSAqL1xyXG4gIFxyXG4gIC8qIGJhY2tncm91bmQtaW1hZ2U6IGltYWdlLXNldChcImh0dHBzOi8vaW1nLmZyZWVwaWsuY29tL2ZyZWUtcGhvdG8vdGFzdHktcGl6emEtbmVhci1pbmdyZWRpZW50c18yMy0yMTQ3NzcyMDgwLmpwZ1wiKTsgKi9cclxuXHJcbiAgLmJhY2tncm91bmR7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIC8qIGJhY2tncm91bmQtc2l6ZTogY292ZXI7ICovXHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAvKiBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyAqL1xyXG4gICAgLyogZmlsdGVyOiBibHVyKDhweCk7XHJcbiAgICAtd2Via2l0LWZpbHRlcjogYmx1cigwcHgpOyAgKi9cclxuICAgIC8qIGJhY2tncm91bmQtaW1hZ2U6IGltYWdlLXNldChcImh0dHBzOi8vYzEud2FsbHBhcGVyZmxhcmUuY29tL3ByZXZpZXcvNTkvMzM3LzEwOS9kaXNoLXJlc3RhdXJhbnQtZGluaW5nLWZvb2QuanBnXCIpOyAqL1xyXG4gIH0gXHJcbiAgLyogaHR0cHM6Ly9tZWRpYS5pc3RvY2twaG90by5jb20vaWQvMTIwMTI5NDI4OC92aWRlby9ibGFjay1mb29kLWJhY2tncm91bmQtY29uY2VwdC1mb3ItZGVzaWduLW1lbnUtcmVzdGF1cmFudC1vci1jYWZlLWNvcHktc3BhY2UtZm9yLXlvdXItbG9nby5qcGc/cz02NDB4NjQwJms9MjAmYz1rZlJCNlRKS2NaR1VicHRlNmtFekxnUXR2dWRKcVNZenVqLXl6QnlOX0tvPSAqL1xyXG5cclxuLyogaHR0cHM6Ly9pbWcuZnJlZXBpay5jb20vZnJlZS1waG90by9kZWxpY2lvdXMtYnJhemlsaWFuLWZvb2QtY29tcG9zaXRpb24td2l0aC1jb3B5LXNwYWNlXzIzLTIxNDg3MzkyMTcuanBnP3c9MTA2MCZ0PXN0PTE2ODM4ODI4ODJ+ZXhwPTE2ODM4ODM0ODJ+aG1hYz03ODk0ZjkwZGFhOGJkYjVmMzE2YTgwYzdmODE5YmU1OGY4ODJkMzZkMzFiMmI4MzI0ZGYzZGEzMTAxOWFhNjUzICovXHJcbi8qIGh0dHBzOi8vaW1nLmZyZWVwaWsuY29tL3ByZW1pdW0tcGhvdG8vZW1wdHktYmxhY2stZm9vZC1iYWNrZ3JvdW5kLXdpdGgtbGVtb25zLXdyaXRpbmctdGV4dC1hZHZlcnRpc2luZ18yMzA0MzItMjQ4MC5qcGcgKi9cclxuLyogaHR0cHM6Ly9pbWcuZnJlZXBpay5jb20vZnJlZS1waG90by90b3Atdmlldy1kb251dC1kZXNpZ25lZC13aXRoLWNvbG9yZWQtc3dlZXRpZXMtY2hvY29sYXRlLWluc2lkZS1vcmFuZ2UtcGxhdGUtZGFyay1kZXNrXzE0MDcyNS0xMzM1MC5qcGc/dz05OTYmdD1zdD0xNjgzODgyNzQ4fmV4cD0xNjgzODgzMzQ4fmhtYWM9MDYzMjczMjk4MTUwMzk0MzIyYWE1MzA4OWZiNjE3NWI2Mjk1NzRkZGJlNTQxYjU0MWY2NDYyY2JiNGVkZTJhZCAqLyJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAKAA,mCAAkH;IAA5CA;MAAA;MAAA;MAAA;MAAA,OAASA,0DAAiC;IAAA,EAAC;IAC7GA,yBAA+E;IAC/EA,6BACgK;IACrJA,YAA6B;IAAAA,iBAAO;IAC/CA,wCAAkB;IAEqBA,YAAiC;IAAAA,iBAAM;IACtEA,4BAA0D;IAEnBA,aAC3B;IAAAA,mBAC6F;IAD7FA,+BAC6F;IACzFA,4BAAsC;IAG1CA,iBAAM;;;;IAfNA,eAA6B;IAA7BA,yEAA6B;IAGtCA,eAA6B;IAA7BA,4DAA6B;IAGDA,eAAiC;IAAjCA,+DAAiC;IAGzBA,eAC3B;IAD2BA,4DAC3B;;;ACPxB,OAAM,MAAOC,uBAAuB;EAClCC,YAAoBC,OAAgC,EAASC,KAAY,EAASC,cAA6B;IAA3F,YAAO,GAAPF,OAAO;IAAkC,UAAK,GAALC,KAAK;IAAgB,mBAAc,GAAdC,cAAc;IAkBxE,gBAAW,GAAO,EAAE;EAjB5C;EACAC,QAAQ;IACN,IAAI,CAACH,OAAO,CAACI,gBAAgB,EAAE,CAACC,SAAS,CACvCC,QAAQ,IAAE;MACR,IAAI,CAACC,WAAW,GAACD,QAAQ;IAC3B,CAAC,EACDE,KAAK,IAAE;MACLC,KAAK,CAAC,WAAW,CAAC;IACpB,CAAC,CACF;EACH;EAEAC,QAAQ,CAACC,EAAS;IAChB,IAAI,CAACX,OAAO,CAACY,KAAK,CAACD,EAAE,CAAC;IACtB,IAAI,CAACV,KAAK,CAACY,aAAa,CAAC,WAAW,CAAC;EACrC;EAIAC,WAAW,CAACC,QAAY;IACtB,IAAI,CAACD,WAAW,CAACC,QAAQ,CAAC;IAC1B,IAAI,CAACf,OAAO,CAACgB,uBAAuB,CAACD,QAAQ,CAAC,CAACV,SAAS,CACrDC,QAAgB,IAAI;MACnB,MAAMW,eAAe,GAAGX,QAAiB;MACzC,IAAGS,QAAQ,IAAIA,QAAQ,KAAK,EAAE,EAAC;QAC7B,IAAI,CAACR,WAAW,GAAGU,eAAe,CAACC,MAAM,CAAEC,UAAc,IAAKA,UAAU,CAACJ,QAAQ,KAAKA,QAAQ,CAAC;OAChG,MAAM;QACL,IAAI,CAACR,WAAW,GAAGU,eAAe;QAClCG,OAAO,CAACC,GAAG,CAACJ,eAAe,CAAC;;IAGhC,CAAC,EACDT,KAAK,IAAE;MACLC,KAAK,CAAC,WAAW,CAAC;IACpB,CAAC,CACF;EACH;;AAtCSX,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAwB;EAAAC;IAAAhB;EAAA;EAAAiB;EAAAC;EAAAC;EAAAC;IAAA;MDPpC9B,8BAAwB;MACYA,iEAAiD;MAAAA,iBAAK;MAE1FA,mFAuBW;MACXA,iBAAM;;;MAxBgDA,eAAc;MAAdA,yCAAc","names":["i0","RestaurantViewComponent","constructor","service","route","activatedRoute","ngOnInit","getAllRestaurant","subscribe","response","restaurants","error","alert","getItems","id","getId","navigateByUrl","getLocation","location","getRestaurantByLocation","restaurantArray","filter","restaurant","console","log","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\restaurant-view\\restaurant-view.component.html","F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\restaurant-view\\restaurant-view.component.ts"],"sourcesContent":["<!-- <app-search (searchButtonClicked)=\"getLocation($event)\"></app-search> -->\n\n<div class=\"background\">\n    <h1 style=\"text-align: center;\">Have a delicious food at available restaurants !!</h1>\n   \n<mat-card class=\"example-card\" *ngFor=\"let restaurant of restaurants\" (click)=\"getItems(restaurant.restaurantId)\">\n    <img mat-card-image src=\"{{restaurant.imageUrl}}\" width=\"400px\" height=\"250px\">\n    <h2\n        style=\"text-align: center; text-transform: uppercase; font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;color: rgb(0, 0, 0);font-weight: bolder;\">\n        <span> {{restaurant.restaurantName}}</span></h2>\n    <mat-card-content>\n        <h3>\n            <div style=\"text-align: left;\">Location: {{restaurant.location}}</div>\n            <a style=\"color: black;  \" target=\"_blank\" rel=\"noopener\">\n                <div style=\"text-align: center;\">\n                    <div class=\"github-star-badge\">Rating: {{restaurant.rating}}\n                        <svg class=\"material-icons\" xmlns=\"http://www.w3.org/2000/svg\" style=\"border: 2px solid green; \"\n                            style=\"background-color: rgb(149, 214, 149);\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                            <path\n                                d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n                        </svg>\n                    </div>\n                </div>\n            </a>\n        </h3>\n    </mat-card-content>\n    \n</mat-card>\n</div>\n<!-- <router-outlet></router-outlet> -->","import { Component, Input } from '@angular/core';\nimport { RestaurantServiceService } from '../service/restaurant-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-restaurant-view',\n  templateUrl: './restaurant-view.component.html',\n  styleUrls: ['./restaurant-view.component.css']\n})\nexport class RestaurantViewComponent {\n  constructor(private service:RestaurantServiceService,private route:Router,private activatedRoute:ActivatedRoute){\n  }\n  ngOnInit(): void {\n    this.service.getAllRestaurant().subscribe(\n      response=>{\n        this.restaurants=response;\n      },\n      error=>{\n        alert(\"error!!!!\");\n      }\n    )\n  }\n\n  getItems(id:number) {\n    this.service.getId(id);\n    this.route.navigateByUrl('/viewItem');\n    }\n\n    @Input('restaurants') restaurants:any = [];\n\n    getLocation(location:any){\n      this.getLocation(location);\n      this.service.getRestaurantByLocation(location).subscribe(\n        (response: Object) => {\n          const restaurantArray = response as any[];\n          if(location && location !== ''){\n            this.restaurants = restaurantArray.filter((restaurant:any) => restaurant.location === location);\n          } else {\n            this.restaurants = restaurantArray;\n            console.log(restaurantArray);\n            \n          }\n        },\n        error=>{\n          alert(\"error!!!!\");\n        }\n      )\n    }\n\n    \n\n  //   onSearchTextChanged(searchText:string){\n  //     this.service.getRestaurantByLocation(searchText).subscribe({\n  //       next:resonse=>{\n  //         if(searchText || searchText !== ''){\n  //           // this.restaurants = resonse.filter\n  //         }\n  //         else{\n  //           this.restaurants = resonse;\n  //         }\n  //       }\n  //     })\n  // }\n//     onSearchTextChanged(searchText:string)\n// {\n//   this.noteService.getAllNotes().subscribe({\n//     next:data=>{\n//       if(searchText || searchText !== ''){\n//         this.notes = data.filter(note1=>note1.title?.includes(searchText));\n//       }\n//       else\n//         this.notes = data;\n//     },\n//     error:e=>{\n//       alert(\"Network error !! please try again later\");\n//     }\n//   })\n// }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}