{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RestaurantServiceService {\n  constructor(http) {\n    this.http = http;\n    this.resId = new EventEmitter();\n    this.id = 0;\n    this.location = '';\n    this.baseUrl = \"http://localhost:8081/api/v1/restaurant/\";\n  }\n  getAllRestaurant() {\n    return this.http.get(this.baseUrl + \"getRestaurant\");\n  }\n  getAllItems(id) {\n    console.log(`Hi + ${id}`);\n    return this.http.get(`http://localhost:8081/api/v1/restaurant/getItems/${id}`);\n  }\n  getId(id) {\n    if (id) {\n      this.id = id;\n      this.resId.emit(id);\n    }\n    console.log(id);\n  }\n  getLocation(location) {\n    this.location = location;\n    console.log(location);\n  }\n  getRestaurantByLocation(location) {\n    return this.http.get(`http://localhost:8081/api/v1/restaurant/getLocation/${location}`);\n  }\n  addRestaurant(addRestaurant) {\n    let httpHeader = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem(\"jwt\")\n    });\n    console.log(localStorage.getItem(\"Token\"));\n    let requestOption = {\n      headers: httpHeader\n    };\n    return this.http.post(`http://localhost:8081/api/v1/restaurant/addRestaurant`, addRestaurant, requestOption);\n  }\n  updateRestaurant(updateRes, id) {\n    let httpHeader = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem(\"jwt\")\n    });\n    let requestOption = {\n      headers: httpHeader\n    };\n    return this.http.put(`http://localhost:8081/api/v1/restaurant/update/${id}`, updateRes, requestOption);\n  }\n  deleteRestaurant(id) {\n    let httpHeader = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem(\"jwt\")\n    });\n    console.log(localStorage.getItem(\"Token\"));\n    let requestOption = {\n      headers: httpHeader\n    };\n    return this.http.delete(`http://localhost:8081/api/v1/restaurant/delete/${id}`, requestOption);\n  }\n  addItem(addItem, id) {\n    console.log(`Hi + ${id}`);\n    let httpHeader = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem(\"jwt\")\n    });\n    let requestOption = {\n      headers: httpHeader\n    };\n    return this.http.post(`http://localhost:8081/api/v1/restaurant/addItem/${id}`, addItem, requestOption);\n  }\n  updateItem(updateItem, id) {\n    let httpHeader = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem(\"jwt\")\n    });\n    let requestOption = {\n      headers: httpHeader\n    };\n    return this.http.put(`http://localhost:8081/api/v1/restaurant/updateItem/${id}`, updateItem, requestOption);\n  }\n  deleteItem(deleteItem, id) {\n    let httpHeader = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem(\"jwt\")\n    });\n    let requestOption = {\n      headers: httpHeader\n    };\n    console.log(deleteItem);\n    console.log(id);\n    return this.http.post(`http://localhost:8081/api/v1/restaurant/deleteItem/${id}`, deleteItem, requestOption);\n  }\n}\nRestaurantServiceService.ɵfac = function RestaurantServiceService_Factory(t) {\n  return new (t || RestaurantServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nRestaurantServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RestaurantServiceService,\n  factory: RestaurantServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","EventEmitter","RestaurantServiceService","constructor","http","getAllRestaurant","get","baseUrl","getAllItems","id","console","log","getId","resId","emit","getLocation","location","getRestaurantByLocation","addRestaurant","httpHeader","localStorage","getItem","requestOption","headers","post","updateRestaurant","updateRes","put","deleteRestaurant","delete","addItem","updateItem","deleteItem","factory","providedIn"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\service\\restaurant-service.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantServiceService {\n\n  constructor(private http:HttpClient) { }\n  resId: EventEmitter<number> = new EventEmitter();\n  id:number=0;\n  location:string='';\n  baseUrl:string=\"http://localhost:8081/api/v1/restaurant/\";\n\n  getAllRestaurant(){\n    return this.http.get(this.baseUrl+\"getRestaurant\");\n  }\n\n  getAllItems(id:number){\n    console.log(`Hi + ${id}`);\n    return this.http.get(`http://localhost:8081/api/v1/restaurant/getItems/${id}`);\n    \n  }\n\n  getId(id:number){\n    \n    if(id){\n      this.id = id;\n      this.resId.emit(id);\n    }\n    console.log(id);\n  }\n\n  getLocation(location:string){\n    this.location = location;\n    console.log(location);\n    \n  }\n\n  getRestaurantByLocation(location:string){\n    return this.http.get(`http://localhost:8081/api/v1/restaurant/getLocation/${location}`);\n  }\n\n\n\n  addRestaurant(addRestaurant:any){\n    let httpHeader = new HttpHeaders({\n      'Authorization':'Bearer ' +localStorage.getItem(\"jwt\")\n    });\n    console.log(localStorage.getItem(\"Token\"));\n    let requestOption = {headers:httpHeader}\n    return this.http.post(`http://localhost:8081/api/v1/restaurant/addRestaurant`,addRestaurant,requestOption);\n    \n  }\n\n  updateRestaurant(updateRes:any,id:number){\n    let httpHeader = new HttpHeaders({\n      'Authorization':'Bearer ' +localStorage.getItem(\"jwt\")\n    });\n    let requestOption = {headers:httpHeader}\n    return this.http.put(`http://localhost:8081/api/v1/restaurant/update/${id}`,updateRes,requestOption);\n  }\n\n  deleteRestaurant(id:number){\n    let httpHeader = new HttpHeaders({\n      'Authorization':'Bearer ' +localStorage.getItem(\"jwt\")\n    });\n    console.log(localStorage.getItem(\"Token\"));\n    let requestOption = {headers:httpHeader}\n    return this.http.delete(`http://localhost:8081/api/v1/restaurant/delete/${id}`,requestOption);\n  }\n\n  addItem(addItem:any,id:any){\n    console.log(`Hi + ${id}`);\n    let httpHeader = new HttpHeaders({\n      'Authorization':'Bearer ' +localStorage.getItem(\"jwt\")\n    });\n    let requestOption = {headers:httpHeader}\n    return this.http.post(`http://localhost:8081/api/v1/restaurant/addItem/${id}`,addItem,requestOption);\n  }\n\n  updateItem(updateItem:any,id:number){\n    let httpHeader = new HttpHeaders({\n      'Authorization':'Bearer ' +localStorage.getItem(\"jwt\")\n    });\n    let requestOption = {headers:httpHeader}\n    return this.http.put(`http://localhost:8081/api/v1/restaurant/updateItem/${id}`,updateItem,requestOption);\n  }\n\n  deleteItem(deleteItem:any,id:number){\n    let httpHeader = new HttpHeaders({\n      'Authorization':'Bearer ' +localStorage.getItem(\"jwt\")\n    });\n    let requestOption = {headers:httpHeader}\n    console.log(deleteItem);\n    console.log(id);    \n    return this.http.post(`http://localhost:8081/api/v1/restaurant/deleteItem/${id}`,deleteItem,requestOption);\n  }\n}\n\n// user part\n// http://localhost:25500/api/v1/restaurant/getRestaurant\n// http://localhost:25500/api/v1/restaurant/getItems/{id}\n\n// search \n// http://localhost:25500/api/v1/restaurant/getRating/{rating}\n// http://localhost:25500/api/v1/restaurant/getLocation/{location}\n\n\n// admin part -restaurant\n// http://localhost:25500/api/v1/restaurant/update/{id}\n// http://localhost:25500/api/v1/restaurant/addRestaurant\n// http://localhost:25500/api/v1/restaurant/delete/{id}\n\n\n// admin part - food items\n// http://localhost:25500/api/v1/restaurant/addItem/{id}\n// http://localhost:25500/api/v1/restaurant/updateItem/{restaurantId}/{itemId}\n// http://localhost:25500/api/v1/restaurant/deleteItem/{restaurantId}/{itemId}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}