{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class LoginService {\n  onSearchTextChanged(searchText) {\n    this.searchElement.emit(searchText);\n  }\n  constructor() {\n    this.isLoggedIn = false;\n    this.adminLoggedIn = false;\n    this.userLoggedIn = new EventEmitter();\n    this.adminLogged = new EventEmitter();\n    this.searchElement = new EventEmitter();\n  }\n  loginSuccess() {\n    this.isLoggedIn = true;\n  }\n  onFailure() {\n    this.isLoggedIn = false;\n  }\n  adminLoginSuccess() {\n    this.adminLoggedIn = true;\n  }\n  adminOnFailure() {\n    this.adminLoggedIn = false;\n  }\n  getLoginStatus() {\n    if (this.isLoggedIn) {\n      this.userLoggedIn.emit(this.isLoggedIn);\n    }\n  }\n  admin() {\n    if (this.adminLoggedIn) {\n      this.adminLogged.emit(this.adminLoggedIn);\n    }\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)();\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;;AAKxD,OAAM,MAAOC,YAAY;EAQvBC,mBAAmB,CAACC,UAAiB;IACnC,IAAI,CAACC,aAAa,CAACC,IAAI,CAACF,UAAU,CAAC;EACrC;EACAG;IATA,eAAU,GAAS,KAAK;IACxB,kBAAa,GAAS,KAAK;IAC3B,iBAAY,GAAuB,IAAIN,YAAY,EAAE;IACrD,gBAAW,GAAuB,IAAIA,YAAY,EAAE;IACpD,kBAAa,GAAsB,IAAIA,YAAY,EAAE;EAKrC;EAEhBO,YAAY;IACV,IAAI,CAACC,UAAU,GAAC,IAAI;EACtB;EACAC,SAAS;IACP,IAAI,CAACD,UAAU,GAAC,KAAK;EACvB;EACAE,iBAAiB;IACf,IAAI,CAACC,aAAa,GAAC,IAAI;EACzB;EACAC,cAAc;IACZ,IAAI,CAACD,aAAa,GAAC,KAAK;EAC1B;EAEAE,cAAc;IACZ,IAAG,IAAI,CAACL,UAAU,EAAC;MACjB,IAAI,CAACM,YAAY,CAACT,IAAI,CAAC,IAAI,CAACG,UAAU,CAAC;;EAE3C;EACAO,KAAK;IACH,IAAG,IAAI,CAACJ,aAAa,EAAC;MACpB,IAAI,CAACK,WAAW,CAACX,IAAI,CAAC,IAAI,CAACM,aAAa,CAAC;;EAE7C;;AAnCWV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAgB,SAAZhB,YAAY;EAAAiB,YAFX;AAAM","names":["EventEmitter","LoginService","onSearchTextChanged","searchText","searchElement","emit","constructor","loginSuccess","isLoggedIn","onFailure","adminLoginSuccess","adminLoggedIn","adminOnFailure","getLoginStatus","userLoggedIn","admin","adminLogged","factory","providedIn"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\service\\login.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  isLoggedIn:boolean=false;\n  adminLoggedIn:boolean=false;\n  userLoggedIn:EventEmitter<boolean>=new EventEmitter();\n  adminLogged:EventEmitter<boolean>=new EventEmitter();\n  searchElement:EventEmitter<string>=new EventEmitter();\n\n  onSearchTextChanged(searchText:string){\n    this.searchElement.emit(searchText);\n  }\n  constructor() { }\n\n  loginSuccess(){\n    this.isLoggedIn=true;\n  }\n  onFailure(){\n    this.isLoggedIn=false;\n  }\n  adminLoginSuccess(){\n    this.adminLoggedIn=true;\n  }\n  adminOnFailure(){\n    this.adminLoggedIn=false;\n  }\n\n  getLoginStatus(){\n    if(this.isLoggedIn){      \n      this.userLoggedIn.emit(this.isLoggedIn)\n    }\n  }\n  admin(){\n    if(this.adminLoggedIn){      \n      this.adminLogged.emit(this.adminLoggedIn)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}