{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../service/restaurant-service.service\";\nimport * as i3 from \"@angular/router\";\nexport class AddItemsComponent {\n  constructor(fb, service, route) {\n    this.fb = fb;\n    this.service = service;\n    this.route = route;\n    this.items = [];\n    this.addform = this.fb.group({\n      \"itemId\": ['', Validators.required],\n      \"itemName\": ['', Validators.required],\n      \"url\": ['', Validators.required],\n      \"price\": ['', Validators.required],\n      \"rating\": ['', Validators.required]\n    });\n  }\n  addItem() {\n    if (this.addform.valid) {\n      this.items.push(this.addform.value);\n      this.service.getId(this.restaurantId);\n      this.service.addItem(this.items, this.restaurantId).subscribe(response => {\n        alert(\"items are added successfully\");\n        this.route.navigateByUrl('/restaurantView');\n      }, error => {\n        alert(\"add all the details\");\n      });\n    }\n  }\n  view() {\n    this.route.navigateByUrl(\"/viewAdminItem\");\n  }\n  update() {}\n  delete() {}\n}\nAddItemsComponent.ɵfac = function AddItemsComponent_Factory(t) {\n  return new (t || AddItemsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RestaurantServiceService), i0.ɵɵdirectiveInject(i3.Router));\n};\nAddItemsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddItemsComponent,\n  selectors: [[\"app-add-items\"]],\n  decls: 32,\n  vars: 5,\n  consts: [[2, \"margin-left\", \"1390px\", \"position\", \"relative\", \"margin-top\", \"-20px\", \"font-family\", \"'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\", \"font-weight\", \"bold\", \"font-size\", \"1.1rem\", \"text-transform\", \"uppercase\"], [2, \"padding\", \"15px\"], [1, \"main\"], [1, \"example-card\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"restaurantId\", \"placeholder\", \"Enter restaurant Id\", \"required\", \"\", \"width\", \"500px\", 3, \"ngModel\", \"ngModelChange\"], [2, \"width\", \"550px\", 3, \"formGroup\", \"ngSubmit\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"itemId\", \"placeholder\", \"Enter item Id\", \"formControlName\", \"itemId\", \"required\", \"\", \"width\", \"500px\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"itemName\", \"placeholder\", \"Enter item name \", \"formControlName\", \"itemName\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"url\", \"placeholder\", \"ImageUrl of the food item\", \"formControlName\", \"url\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"price\", \"placeholder\", \"Enter price\", \"formControlName\", \"price\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"number\", \"name\", \"rating\", \"placeholder\", \"Rating\", \"formControlName\", \"rating\", \"required\", \"\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"disabled\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"]],\n  template: function AddItemsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"h1\");\n      i0.ɵɵtext(5, \"Add Food items to this restaurant\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"mat-card\", 3)(7, \"mat-form-field\", 4)(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AddItemsComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.restaurantId = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"form\", 6);\n      i0.ɵɵlistener(\"ngSubmit\", function AddItemsComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.addItem();\n      });\n      i0.ɵɵelementStart(11, \"mat-form-field\", 4);\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"br\");\n      i0.ɵɵelementStart(14, \"mat-form-field\", 4);\n      i0.ɵɵelement(15, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelementStart(17, \"mat-form-field\", 4);\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵelementStart(20, \"mat-form-field\", 4);\n      i0.ɵɵelement(21, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"br\");\n      i0.ɵɵelementStart(23, \"mat-form-field\", 4);\n      i0.ɵɵelement(24, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"br\");\n      i0.ɵɵelementStart(26, \"button\", 12);\n      i0.ɵɵtext(27, \"Add food Items\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"br\")(29, \"br\");\n      i0.ɵɵelementStart(30, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function AddItemsComponent_Template_button_click_30_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵtext(31, \"Update food items \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.userLoggedIn, \"\");\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.restaurantId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.restaurantId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.addform);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"disabled\", !ctx.addform.valid);\n    }\n  },\n  styles: [\".example-card[_ngcontent-%COMP%] {\\r\\n    \\r\\n    max-width: 550px;\\r\\n    \\r\\n    text-align: center;\\r\\n    \\r\\n    \\r\\n    \\r\\n    box-shadow: 5px 5px 5px 5px rgb(150, 138, 162);\\r\\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\\r\\n  }\\r\\n  .main[_ngcontent-%COMP%]{\\r\\n    margin-left: 300px;\\r\\n    \\r\\n    padding: 5px;\\r\\n  }\\r\\n  h1[_ngcontent-%COMP%]{\\r\\n    background-color: rgb(110, 110, 218);\\r\\n    color: whitesmoke;\\r\\n    max-width: max-content;\\r\\n    margin-left: 90px;\\r\\n    border-radius: 5px;\\r\\n    padding: 15px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLWl0ZW1zL2FkZC1pdGVtcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQiwwQkFBMEI7SUFDMUIsa0JBQWtCO0lBQ2xCLHdCQUF3QjtJQUN4QixrQkFBa0I7SUFDbEIsb0JBQW9CO0lBQ3BCLDhDQUE4QztJQUM5Qyx3RUFBd0U7RUFDMUU7RUFDQTtJQUNFLGtCQUFrQjtJQUNsQiwwQkFBMEI7SUFDMUIsWUFBWTtFQUNkO0VBQ0E7SUFDRSxvQ0FBb0M7SUFDcEMsaUJBQWlCO0lBQ2pCLHNCQUFzQjtJQUN0QixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGFBQWE7RUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNhcmQge1xyXG4gICAgLyogbWFyZ2luLXRvcDogMzBweDsgKi9cclxuICAgIG1heC13aWR0aDogNTUwcHg7XHJcbiAgICAvKiBkaXNwbGF5OiBpbmxpbmUtZmxleDsgKi9cclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIC8qIG1hcmdpbi1sZWZ0OiA1MDBweDsgKi9cclxuICAgIC8qIG1hcmdpbjogMTBweDsgKi9cclxuICAgIC8qIHBhZGRpbmc6IDEwMHB4OyAqL1xyXG4gICAgYm94LXNoYWRvdzogNXB4IDVweCA1cHggNXB4IHJnYigxNTAsIDEzOCwgMTYyKTtcclxuICAgIGZvbnQtZmFtaWx5OiAnRnJhbmtsaW4gR290aGljIE1lZGl1bScsICdBcmlhbCBOYXJyb3cnLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICB9XHJcbiAgLm1haW57XHJcbiAgICBtYXJnaW4tbGVmdDogMzAwcHg7XHJcbiAgICAvKiBtYXJnaW4tYm90dG9tOiA1MDBweDsgKi9cclxuICAgIHBhZGRpbmc6IDVweDtcclxuICB9XHJcbiAgaDF7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTEwLCAxMTAsIDIxOCk7XHJcbiAgICBjb2xvcjogd2hpdGVzbW9rZTtcclxuICAgIG1heC13aWR0aDogbWF4LWNvbnRlbnQ7XHJcbiAgICBtYXJnaW4tbGVmdDogOTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;AAUxD,OAAM,MAAOC,iBAAiB;EAO5BC,YAAoBC,EAAc,EAASC,OAAgC,EAASC,KAAY;IAA5E,OAAE,GAAFF,EAAE;IAAqB,YAAO,GAAPC,OAAO;IAAkC,UAAK,GAALC,KAAK;IAFzF,UAAK,GAAM,EAAE;IAIb,YAAO,GAAK,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACxB,QAAQ,EAAC,CAAC,EAAE,EAACN,UAAU,CAACO,QAAQ,CAAC;MAClC,UAAU,EAAE,CAAC,EAAE,EAACP,UAAU,CAACO,QAAQ,CAAC;MACpC,KAAK,EAAC,CAAC,EAAE,EAACP,UAAU,CAACO,QAAQ,CAAC;MAC/B,OAAO,EAAC,CAAC,EAAE,EAACP,UAAU,CAACO,QAAQ,CAAC;MAChC,QAAQ,EAAC,CAAC,EAAE,EAACP,UAAU,CAACO,QAAQ;KACjC,CAAC;EARkG;EAUpGC,OAAO;IACL,IAAG,IAAI,CAACC,OAAO,CAACC,KAAK,EAAC;MACpB,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACH,OAAO,CAACI,KAAK,CAAC;MACnC,IAAI,CAACT,OAAO,CAACU,KAAK,CAAC,IAAI,CAACC,YAAY,CAAC;MACrC,IAAI,CAACX,OAAO,CAACI,OAAO,CAAC,IAAI,CAACG,KAAK,EAAC,IAAI,CAACI,YAAY,CAAC,CAACC,SAAS,CAC1DC,QAAQ,IAAE;QACRC,KAAK,CAAC,8BAA8B,CAAC;QACrC,IAAI,CAACb,KAAK,CAACc,aAAa,CAAC,iBAAiB,CAAC;MAC7C,CAAC,EACDC,KAAK,IAAE;QACLF,KAAK,CAAC,qBAAqB,CAAC;MAC9B,CAAC,CACF;;EAGL;EAEAG,IAAI;IACF,IAAI,CAAChB,KAAK,CAACc,aAAa,CAAC,gBAAgB,CAAC;EAC5C;EACAG,MAAM,IAAG;EACTC,MAAM,IAAG;;AAtCItB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX9BC,8BACqN;MACjNA,YAAgB;MAAAA,iBAAM;MAC1BA,yBAGM;MACNA,8BAAkB;MACVA,iDAAiC;MAAAA,iBAAK;MAC1CA,mCAA+B;MAEKA;QAAA;MAAA,EAA0B;MADtBA,iBACwB;MAAAA,YAAgB;MAAAA,iBAAiB;MAC7FA,gCAA0E;MAA7CA;QAAA,OAAYC,aAAS;MAAA,EAAC;MAE/CD,0CAAmC;MAAAA,4BACsB;MAAAA,iBAAiB;MAC1EA,sBAAI;MACJA,0CAAkC;MAAAA,4BACqC;MAAAA,iBAAiB;MAAAA,sBAAI;MAC5FA,0CAAkC;MAAAA,4BAC6C;MAAAA,iBAAiB;MAChGA,sBAAI;MAAAA,0CAAkC;MAAAA,6BAC6B;MAAAA,iBAAiB;MACpFA,sBAAI;MAAAA,0CAAkC;MAAAA,6BACI;MAAAA,iBAAiB;MAC3DA,sBAAI;MACJA,mCAAmF;MAAAA,+BAAc;MAAAA,iBAAS;MAC1GA,sBAAI;MACJA,mCAA4D;MAAnBA;QAAA,OAASC,YAAQ;MAAA,EAAC;MAACD,mCAAkB;MAAAA,iBAAS;;;MA1B/FA,eAAgB;MAAhBA,gDAAgB;MASoBA,eAA0B;MAA1BA,0CAA0B;MAAEA,eAAgB;MAAhBA,sCAAgB;MACtEA,eAAqB;MAArBA,uCAAqB;MAcgCA,gBAA2B;MAA3BA,6CAA2B","names":["Validators","AddItemsComponent","constructor","fb","service","route","group","required","addItem","addform","valid","items","push","value","getId","restaurantId","subscribe","response","alert","navigateByUrl","error","view","update","delete","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\add-items\\add-items.component.ts","F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\add-items\\add-items.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { Router } from '@angular/router';\nimport { RestaurantServiceService } from '../service/restaurant-service.service';\n\n@Component({\n  selector: 'app-add-items',\n  templateUrl: './add-items.component.html',\n  styleUrls: ['./add-items.component.css']\n})\nexport class AddItemsComponent {\n  userLoggedIn?:string;\n\n  restaurantId:any;\n\n  items:any =[]\n\n  constructor(private fb:FormBuilder,private service:RestaurantServiceService,private route:Router){}\n\n  addform:any=this.fb.group({\n    \"itemId\":['',Validators.required],\n   \"itemName\" :['',Validators.required],\n   \"url\":['',Validators.required],\n  \"price\":['',Validators.required],\n  \"rating\":['',Validators.required]\n})\n\naddItem(){\n  if(this.addform.valid){\n    this.items.push(this.addform.value);\n    this.service.getId(this.restaurantId);\n    this.service.addItem(this.items,this.restaurantId).subscribe(\n      response=>{\n        alert(\"items are added successfully\");\n        this.route.navigateByUrl('/restaurantView');\n      },\n      error=>{\n        alert(\"add all the details\");\n      }\n    )\n  }\n \n}\n\nview(){\n  this.route.navigateByUrl(\"/viewAdminItem\");\n}\nupdate(){}\ndelete(){}\n}\n","<div\n    style=\"margin-left: 1390px; position: relative; margin-top: -20px; font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;font-weight: bold;font-size: 1.1rem;text-transform: uppercase;\">\n    {{userLoggedIn}}</div>\n<div style=\"padding: 15px;\">\n    <!-- <button id=\"btn1\" mat-raised-button color=\"primary\" (click)=\"view()\"\n        style=\"margin-left: 900px; margin-bottom: -500px;\">View food items available in this restaurant</button> -->\n</div>\n<div class=\"main\">\n    <h1>Add Food items to this restaurant</h1>\n    <mat-card class=\"example-card\">\n         <mat-form-field  appearance=\"fill\"><input matInput type=\"text\" name=\"restaurantId\" placeholder=\"Enter restaurant Id\" \n                 required width=\"500px\" [(ngModel)]=\"restaurantId\" >{{restaurantId}}</mat-form-field>\n        <form [formGroup]=\"addform\"  (ngSubmit)=\"addItem()\" style=\"width: 550px;\">\n           \n            <mat-form-field  appearance=\"fill\"><input matInput type=\"text\" name=\"itemId\" placeholder=\"Enter item Id\" \n                    formControlName=\"itemId\" required width=\"500px\" ></mat-form-field>\n            <br>\n            <mat-form-field appearance=\"fill\"><input matInput type=\"text\" name=\"itemName\"\n                placeholder=\"Enter item name \" formControlName=\"itemName\" required></mat-form-field><br>\n            <mat-form-field appearance=\"fill\"><input matInput type=\"text\" name=\"url\"\n                    placeholder=\"ImageUrl of the food item\" formControlName=\"url\" required></mat-form-field>\n            <br><mat-form-field appearance=\"fill\"><input matInput type=\"text\" name=\"price\"\n                    placeholder=\"Enter price\" formControlName=\"price\" required></mat-form-field>\n            <br><mat-form-field appearance=\"fill\"><input matInput type=\"number\" name=\"rating\" placeholder=\"Rating\"\n                    formControlName=\"rating\" required></mat-form-field>\n            <br>\n            <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"!addform.valid\">Add food Items</button>\n            <br><br>\n            <button mat-raised-button color=\"accent\" (click)=\"update()\">Update food items </button>\n            <!-- <button mat-fab style=\"background-color: crimson;\"(click)=\"delete()\"  aria-label=\"Example icon button with a delete icon\">\n                <mat-icon>delete</mat-icon>\n              </button> -->\n              <!-- (click)=\"delete(product.furnitureId)\" -->\n        </form>\n    </mat-card>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}