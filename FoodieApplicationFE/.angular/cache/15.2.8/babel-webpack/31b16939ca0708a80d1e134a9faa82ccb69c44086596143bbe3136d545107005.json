{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\n// import { LoginService } from '../service/login.service';\nlet LoginComponent = class LoginComponent {};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAKzC;AAOO,IAAMC,cAAc,GAApB,MAAMA,cAAc,GAyD1B;AAzDYA,cAAc,eAL1BD,SAAS,CAAC;EACTE,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWH,cAAc,CAyD1B;SAzDYA,cAAc","names":["Component","LoginComponent","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { UserService } from '../service/user.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n// import { LoginService } from '../service/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  // responseData:any;\n\n  // constructor(private fb:FormBuilder,private userService:UserService,private _sanckBar:MatSnackBar,private route:Router,private loginStatus:LoginService){}\n\n  // loginForm = this.fb.group({\n  //   email:[\"\",[Validators.required,this.checkIfGuestEmailsAreValid]],\n  //   password:[\"\",[Validators.required,Validators.minLength(7)]]\n  // })\n\n  // get email(){\n  //   return this.loginForm.get('email');\n  // }\n\n  // get password(){\n  //   return this.loginForm.get('password')\n  // }\n\n  // checkIfGuestEmailsAreValid(c: AbstractControl) {\n \n  //   if (c.value !== '') {\n  //     const emailString = c.value;\n  //     const emails = emailString.split(',').map((e: string) => e.trim());\n  //     const emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n  //     const anyInvalidEmail = emails.every((e: string) => e.match(emailRegex) !== null);\n  //     if (!anyInvalidEmail) {\n  //       return { checkIfGuestEmailsAreValid: false }\n  //     }\n  //   }\n  //   return null;\n  // }\n\n  // loginCheck(){\n  //   // console.log(this.loginForm);\n    \n  //     this.userService.login(this.loginForm.value).subscribe({\n  //       next:data=>{\n  //         this.responseData=data;\n  //         // console.log(this.responseData);\n          \n  //         localStorage.setItem('Token',this.responseData.Token);\n  //         // localStorage.setItem('email',this.responseData.email);\n             \n\n  //         this._sanckBar.open('Logged In successfully.....', 'success', {\n  //           duration: 3000,\n  //           panelClass: ['mat-toolbar', 'mat-primary']\n  //         });\n  //         this.loginStatus.loginSuccess();\n  //         this.route.navigateByUrl(\"/header\");\n  //       },error:(err)=>{\n  //          this.loginStatus.onFailure()\n  //         alert(\"Authorization failed, Please check the provided details again!\")\n  //       }\n  //     })\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}