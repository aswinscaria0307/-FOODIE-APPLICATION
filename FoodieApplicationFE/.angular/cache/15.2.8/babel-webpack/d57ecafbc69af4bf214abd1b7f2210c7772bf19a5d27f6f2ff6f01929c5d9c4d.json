{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class LoginService {\n  constructor() {\n    this.isLoggedIn = false;\n    this.adminLoggedIn = false;\n    this.userLoggedIn = new EventEmitter();\n    this.adminLoggedIn = new EventEmitter();\n  }\n  loginSuccess() {\n    this.isLoggedIn = true;\n  }\n  onFailure() {\n    this.isLoggedIn = false;\n  }\n  adminLoginSuccess() {\n    this.adminLoggedIn = true;\n  }\n  adminOnFailure() {\n    this.adminLoggedIn = false;\n  }\n  getLoginStatus() {\n    if (this.isLoggedIn) {\n      this.userLoggedIn.emit(this.isLoggedIn);\n    }\n  }\n  adminLogged() {\n    if (this.isLoggedIn) {\n      this.userLoggedIn.emit(this.adminLoggedIn);\n    }\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)();\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;;AAKxD,OAAM,MAAOC,YAAY;EAOvBC;IALA,eAAU,GAAS,KAAK;IACxB,kBAAa,GAAS,KAAK;IAC3B,iBAAY,GAAuB,IAAIF,YAAY,EAAE;IACrD,kBAAa,GAAuB,IAAIA,YAAY,EAAE;EAEtC;EAEhBG,YAAY;IACV,IAAI,CAACC,UAAU,GAAC,IAAI;EACtB;EACAC,SAAS;IACP,IAAI,CAACD,UAAU,GAAC,KAAK;EACvB;EACAE,iBAAiB;IACf,IAAI,CAACC,aAAa,GAAC,IAAI;EACzB;EACAC,cAAc;IACZ,IAAI,CAACD,aAAa,GAAC,KAAK;EAC1B;EAEAE,cAAc;IACZ,IAAG,IAAI,CAACL,UAAU,EAAC;MACjB,IAAI,CAACM,YAAY,CAACC,IAAI,CAAC,IAAI,CAACP,UAAU,CAAC;;EAE3C;EACAQ,WAAW;IACT,IAAG,IAAI,CAACR,UAAU,EAAC;MACjB,IAAI,CAACM,YAAY,CAACC,IAAI,CAAC,IAAI,CAACJ,aAAa,CAAC;;EAE9C;;AA/BWN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAY,SAAZZ,YAAY;EAAAa,YAFX;AAAM","names":["EventEmitter","LoginService","constructor","loginSuccess","isLoggedIn","onFailure","adminLoginSuccess","adminLoggedIn","adminOnFailure","getLoginStatus","userLoggedIn","emit","adminLogged","factory","providedIn"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\service\\login.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  isLoggedIn:boolean=false;\n  adminLoggedIn:boolean=false;\n  userLoggedIn:EventEmitter<boolean>=new EventEmitter();\n  adminLoggedIn:EventEmitter<boolean>=new EventEmitter();\n\n  constructor() { }\n\n  loginSuccess(){\n    this.isLoggedIn=true;\n  }\n  onFailure(){\n    this.isLoggedIn=false;\n  }\n  adminLoginSuccess(){\n    this.adminLoggedIn=true;\n  }\n  adminOnFailure(){\n    this.adminLoggedIn=false;\n  }\n\n  getLoginStatus(){\n    if(this.isLoggedIn){      \n      this.userLoggedIn.emit(this.isLoggedIn)\n    }\n  }\n  adminLogged(){\n    if(this.isLoggedIn){      \n      this.userLoggedIn.emit(this.adminLoggedIn)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}