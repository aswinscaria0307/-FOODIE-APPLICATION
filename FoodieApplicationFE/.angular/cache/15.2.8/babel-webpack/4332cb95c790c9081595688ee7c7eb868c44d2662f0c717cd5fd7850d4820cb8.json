{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Order } from '../model/order';\nlet ViewItemsComponent = class ViewItemsComponent {\n  constructor(restaurant, route, login, foodie, userService, _sanckBar) {\n    this.restaurant = restaurant;\n    this.route = route;\n    this.login = login;\n    this.foodie = foodie;\n    this.userService = userService;\n    this._sanckBar = _sanckBar;\n    this.restaurantItems = [];\n  }\n  ngOnInit() {\n    this.data = 51;\n    this.restaurantId = this.restaurant.id;\n    this.restaurant.getAllItems(+this.restaurantId).subscribe(data => {\n      this.restaurantItems = data;\n    });\n  }\n  addToFavourites(itemData) {\n    if (this.login.isLoggedIn) {\n      this.userService.addItemToFavourites(itemData).subscribe({\n        next: data => {\n          this._sanckBar.open(`${itemData.itemName} is added on your Favourites`, 'success', {\n            duration: 3000,\n            panelClass: ['mat-toolbar', 'mat-primary']\n          });\n        },\n        error(err) {\n          alert(\"Not added to favourites!\");\n        }\n      });\n    } else {\n      this.route.navigateByUrl(\"/login\");\n    }\n  }\n  addToCart(theItem) {\n    if (this.login.isLoggedIn) {\n      this.addtocart = new Order();\n      this.addtocart.customerId = localStorage.getItem('email') ?? '';\n      this.addtocart.billingAddress = localStorage.getItem(\"address\") ?? '';\n      if (theItem) {\n        console.log(theItem);\n        theItem.status = \"incart\";\n        theItem.count = 1;\n        if (!this.addtocart.items) {\n          this.addtocart.items = [];\n        }\n        this.addtocart.items = this.addtocart.items.concat(theItem);\n        this.foodie.insertOrder(this.addtocart).subscribe(data => {\n          this._sanckBar.open(`Item Added to Cart`, 'success', {\n            duration: 3000,\n            panelClass: ['mat-toolbar', 'mat-primary']\n          });\n        });\n      } else this.route.navigateByUrl(\"/login\");\n    } else {\n      this.route.navigateByUrl(\"/login\");\n    }\n  }\n  check(itemId) {\n    if (this.userService.checkFavourite(itemId)) {\n      return \"favorite_added\";\n    } else {\n      return \"favorite_border\";\n    }\n  }\n};\nViewItemsComponent = __decorate([Component({\n  selector: 'app-view-items',\n  templateUrl: './view-items.component.html',\n  styleUrls: ['./view-items.component.css']\n})], ViewItemsComponent);\nexport { ViewItemsComponent };","map":{"version":3,"mappings":"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","names":["Component","Order","ViewItemsComponent","constructor","restaurant","route","login","foodie","userService","_sanckBar","ngOnInit","data","restaurantId","id","getAllItems","subscribe","restaurantItems","addToFavourites","itemData","isLoggedIn","addItemToFavourites","next","open","itemName","duration","panelClass","error","err","alert","navigateByUrl","addToCart","theItem","addtocart","customerId","localStorage","getItem","billingAddress","console","log","status","count","items","concat","insertOrder","check","itemId","checkFavourite","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\view-items\\view-items.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RestaurantServiceService } from '../service/restaurant-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoginService } from '../service/login.service';\nimport { Order } from '../model/order';\nimport { Item } from '../model/item';\nimport { FoodieService } from '../service/foodie.service';\nimport { UserService } from '../service/user.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-view-items',\n  templateUrl: './view-items.component.html',\n  styleUrls: ['./view-items.component.css']\n})\nexport class ViewItemsComponent {\n  constructor(private restaurant:RestaurantServiceService,private route:Router,private login:LoginService,private foodie:FoodieService,private userService:UserService,private _sanckBar:MatSnackBar){}\n  addtocart!:Order;\n  data:number | undefined;\n  restaurantItems:any=[];\n  restaurantId!: number;\n\n  ngOnInit(): void {\n    this.data = 51;\n    this.restaurantId = this.restaurant.id;\n    this.restaurant.getAllItems(+this.restaurantId).subscribe(data=>{      \n      this.restaurantItems = data;\n    })\n  }\n\naddToFavourites(itemData:any){\n  if(this.login.isLoggedIn){\n  this.userService.addItemToFavourites(itemData).subscribe({\n    next:data=>{\n      this._sanckBar.open(`${itemData.itemName} is added on your Favourites`, 'success', {\n        duration: 3000,\n        panelClass: ['mat-toolbar', 'mat-primary']\n      });\n    },error(err) {\n          alert(\"Not added to favourites!\")\n    },\n  })\n}else{\n  this.route.navigateByUrl(\"/login\");\n}\n}\n          \naddToCart(theItem:any){\n  if(this.login.isLoggedIn){\n    this.addtocart = new Order();\n    this.addtocart.customerId = localStorage.getItem('email') ?? '';\n    this.addtocart.billingAddress=localStorage.getItem(\"address\")?? '';\n    if (theItem) {\n      console.log(theItem);\n      theItem.status=\"incart\";\n      theItem.count=1;\n      if (!this.addtocart.items) {\n        this.addtocart.items = [];\n      }\n      this.addtocart.items = this.addtocart.items.concat(theItem);\n      this.foodie.insertOrder(this.addtocart).subscribe(data=>{\n        this._sanckBar.open(`Item Added to Cart`, 'success', {\n          duration: 3000,\n          panelClass: ['mat-toolbar', 'mat-primary']\n        });\n      });\n      }else\n  this.route.navigateByUrl(\"/login\");\n}  else{this.route.navigateByUrl(\"/login\");}\n}\ncheck(itemId:any){\n  if(this.userService.checkFavourite(itemId)){\n    return \"favorite_added\";\n  }\n  else{\n    return \"favorite_border\";\n  }\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}