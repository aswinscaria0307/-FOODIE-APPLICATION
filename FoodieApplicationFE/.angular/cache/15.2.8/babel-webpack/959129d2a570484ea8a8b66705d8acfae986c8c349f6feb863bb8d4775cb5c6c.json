{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HeaderComponent = class HeaderComponent {\n  constructor(userService, sanitizer, logSer, router, _sanckBar) {\n    this.userService = userService;\n    this.sanitizer = sanitizer;\n    this.logSer = logSer;\n    this.router = router;\n    this._sanckBar = _sanckBar;\n    this.imageSrc = '';\n    this.adminLoggedIn = false;\n    this.userName = \"\";\n    this.isVisible = false;\n  }\n  ngOnInit() {\n    this.status = \"login\";\n    this.logSer.userLoggedIn.subscribe(email => {\n      if (email == true) {\n        this.status = \"logout\";\n      }\n    });\n    this.logSer.adminLogged.subscribe(admin => {\n      if (admin == true) {\n        this.adminLoggedIn = true;\n      }\n    });\n    this.userService.getProfileImg().subscribe(data => {\n      if (data && data.imageData) {\n        const imageData = data.imageData;\n        const binaryData = atob(imageData);\n        const arrayBuffer = new ArrayBuffer(binaryData.length);\n        const uint8Array = new Uint8Array(arrayBuffer);\n        for (let i = 0; i < binaryData.length; i++) {\n          uint8Array[i] = binaryData.charCodeAt(i);\n        }\n        const blob = new Blob([uint8Array], {\n          type: 'image/png'\n        });\n        this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(blob));\n      }\n    });\n    this.userService.getUserName().subscribe(data => {\n      this.userName = data.name;\n    });\n  }\n  clicked() {\n    if (this.status === \"logout\") {\n      localStorage.clear();\n      this._sanckBar.open('Logged out successfully.....', 'success', {\n        duration: 3000,\n        panelClass: ['mat-toolbar', 'mat-primary']\n      });\n      this.logSer.onFailure();\n      this.router.navigateByUrl(\"/login\");\n      this.status = \"login\";\n    }\n  }\n  toCart() {\n    this.router.navigateByUrl(\"/cart\");\n  }\n  clickedList() {\n    if (!this.isVisible) {\n      this.isVisible = true;\n    } else {\n      this.isVisible = false;\n    }\n  }\n};\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"mappings":"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","names":["Component","HeaderComponent","constructor","userService","sanitizer","logSer","router","_sanckBar","ngOnInit","status","userLoggedIn","subscribe","email","adminLogged","admin","adminLoggedIn","getProfileImg","data","imageData","binaryData","atob","arrayBuffer","ArrayBuffer","length","uint8Array","Uint8Array","i","charCodeAt","blob","Blob","type","imageSrc","bypassSecurityTrustUrl","URL","createObjectURL","getUserName","userName","name","clicked","localStorage","clear","open","duration","panelClass","onFailure","navigateByUrl","toCart","clickedList","isVisible","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\header\\header.component.ts"],"sourcesContent":["import { Component, OnInit, Sanitizer } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { UserService } from '../service/user.service';\nimport { LoginService } from '../service/login.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent implements OnInit {\n  imageSrc:SafeUrl='';\n  status!:String;\n  adminLoggedIn=false;\n  userName:String = \"\";\n  isVisible:boolean =false;\n\n  constructor(private userService:UserService,private sanitizer:DomSanitizer,private logSer:LoginService,private router:Router,private _sanckBar:MatSnackBar){}\n  ngOnInit(): void {\n    this.status=\"login\";\n    this.logSer.userLoggedIn.subscribe((email:boolean)=>{      \n      if(email==true){\n      this.status=\"logout\";\n      }\n    });\n    this.logSer.adminLogged.subscribe((admin:boolean)=>{      \n      if(admin==true){\n      this.adminLoggedIn=true;\n      }\n    });\n    this.userService.getProfileImg().subscribe((data:any)=>{\n      if(data && data.imageData){\n        const imageData = data.imageData;\n        const binaryData = atob(imageData);\n        const arrayBuffer = new ArrayBuffer(binaryData.length);\n        const uint8Array = new Uint8Array(arrayBuffer);\n        for (let i = 0; i < binaryData.length; i++) {\n          uint8Array[i] = binaryData.charCodeAt(i);\n        }\n        const blob = new Blob([uint8Array], { type: 'image/png' });\n        this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(blob));\n      }\n    })\n\n    this.userService.getUserName().subscribe((data:any)=>{\n    this.userName = data.name;\n      \n    })\n  } \n  clicked(){\n    if(this.status===\"logout\"){\n      localStorage.clear();\n      this._sanckBar.open('Logged out successfully.....', 'success', {\n        duration: 3000,\n        panelClass: ['mat-toolbar', 'mat-primary']\n      });\n      this.logSer.onFailure();\n      this.router.navigateByUrl(\"/login\")\n      this.status=\"login\"\n        }\n  }\n  toCart(){\n    this.router.navigateByUrl(\"/cart\");\n  }\n  clickedList(){\n    if(!this.isVisible){\n      this.isVisible=true;\n    }\n    else{\n      this.isVisible=false;\n    }\n    \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}