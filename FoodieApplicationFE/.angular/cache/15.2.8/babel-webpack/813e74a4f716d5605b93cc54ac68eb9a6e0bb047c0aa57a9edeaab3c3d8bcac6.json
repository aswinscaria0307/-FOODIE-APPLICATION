{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Order } from '../model/order';\nlet ViewItemsComponent = class ViewItemsComponent {\n  constructor(restaurant, route, login, foodie) {\n    this.restaurant = restaurant;\n    this.route = route;\n    this.login = login;\n    this.foodie = foodie;\n    this.restaurantItems = [];\n  }\n  ngOnInit() {\n    this.data = 51;\n    this.restaurantId = this.restaurant.id;\n    this.restaurant.getAllItems(+this.restaurantId).subscribe(data => {\n      this.restaurantItems = data;\n      console.log(this.restaurantItems);\n    });\n  }\n  getItems() {\n    this.restaurant.getAllItems(+this.restaurantId).subscribe(data => {\n      console.log(data);\n      console.log(this.restaurantId);\n      this.restaurantItems = data;\n      console.log(this.restaurantItems);\n    });\n  }\n  addToCart(itemName) {\n    if (this.login.isLoggedIn) {\n      this.addtocart = new Order();\n      this.addtocart.customerId = localStorage.getItem('email') ?? '';\n      this.addtocart.billingAddress = localStorage.getItem(\"address\") ?? '';\n      let item = this.restaurantItems.find(item => item.itemName == itemName);\n      if (item) {\n        if (!this.addtocart.items) {\n          this.addtocart.items = [];\n        }\n        this.addtocart.items = this.addtocart.items.concat(item);\n      }\n      console.log(this.addtocart);\n      this.restaurant.addtocart(this.addtocart).subscribe(data => {});\n    } else this.route.navigateByUrl(\"/login\");\n  }\n};\nViewItemsComponent = __decorate([Component({\n  selector: 'app-view-items',\n  templateUrl: './view-items.component.html',\n  styleUrls: ['./view-items.component.css']\n})], ViewItemsComponent);\nexport { ViewItemsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAIzC,SAASC,KAAK,QAAQ,gBAAgB;AAQ/B,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAC7BC,YAAoBC,UAAmC,EAASC,KAAY,EAASC,KAAkB,EAASC,MAAO;IAAnG,eAAU,GAAVH,UAAU;IAAkC,UAAK,GAALC,KAAK;IAAgB,UAAK,GAALC,KAAK;IAAsB,WAAM,GAANC,MAAM;IAGtH,oBAAe,GAAK,EAAE;EAHmG;EAMzHC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,YAAY,GAAG,IAAI,CAACN,UAAU,CAACO,EAAE;IACtC,IAAI,CAACP,UAAU,CAACQ,WAAW,CAAC,CAAC,IAAI,CAACF,YAAY,CAAC,CAACG,SAAS,CAACJ,IAAI,IAAE;MAC9D,IAAI,CAACK,eAAe,GAAGL,IAAI;MAC3BM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,eAAe,CAAC;IACnC,CAAC,CAAC;EACJ;EACFG,QAAQ;IACA,IAAI,CAACb,UAAU,CAACQ,WAAW,CAAC,CAAC,IAAI,CAACF,YAAY,CAAC,CAACG,SAAS,CAACJ,IAAI,IAAE;MAC9DM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;MACjBM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,YAAY,CAAC;MAC9B,IAAI,CAACI,eAAe,GAAGL,IAAI;MAC3BM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,eAAe,CAAC;IAEnC,CAAC,CAAC;EACJ;EAGNI,SAAS,CAACC,QAAe;IACvB,IAAG,IAAI,CAACb,KAAK,CAACc,UAAU,EAAC;MACvB,IAAI,CAACC,SAAS,GAAG,IAAIpB,KAAK,EAAE;MAC5B,IAAI,CAACoB,SAAS,CAACC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;MAC/D,IAAI,CAACH,SAAS,CAACI,cAAc,GAACF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAG,EAAE;MAClE,IAAIE,IAAI,GAAM,IAAI,CAACZ,eAAe,CAACa,IAAI,CAAED,IAA2B,IAAGA,IAAI,CAACP,QAAQ,IAAEA,QAAQ,CAAC;MAC/F,IAAIO,IAAI,EAAE;QACR,IAAI,CAAC,IAAI,CAACL,SAAS,CAACO,KAAK,EAAE;UACzB,IAAI,CAACP,SAAS,CAACO,KAAK,GAAG,EAAE;;QAE3B,IAAI,CAACP,SAAS,CAACO,KAAK,GAAG,IAAI,CAACP,SAAS,CAACO,KAAK,CAACC,MAAM,CAACH,IAAI,CAAC;;MACrDX,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,SAAS,CAAC;MAClC,IAAI,CAACjB,UAAU,CAACiB,SAAS,CAAC,IAAI,CAACA,SAAS,CAAC,CAACR,SAAS,CAACJ,IAAI,IAAE,CAAC,CAAC,CAAC;KAC5D,MACD,IAAI,CAACJ,KAAK,CAACyB,aAAa,CAAC,QAAQ,CAAC;EACpC;CACC;AA1CY5B,kBAAkB,eAL9BF,SAAS,CAAC;EACT+B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACW/B,kBAAkB,CA0C9B;SA1CYA,kBAAkB","names":["Component","Order","ViewItemsComponent","constructor","restaurant","route","login","foodie","ngOnInit","data","restaurantId","id","getAllItems","subscribe","restaurantItems","console","log","getItems","addToCart","itemName","isLoggedIn","addtocart","customerId","localStorage","getItem","billingAddress","item","find","items","concat","navigateByUrl","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\view-items\\view-items.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RestaurantServiceService } from '../service/restaurant-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoginService } from '../service/login.service';\nimport { Order } from '../model/order';\nimport { Item } from '../model/item';\n\n@Component({\n  selector: 'app-view-items',\n  templateUrl: './view-items.component.html',\n  styleUrls: ['./view-items.component.css']\n})\nexport class ViewItemsComponent {\n  constructor(private restaurant:RestaurantServiceService,private route:Router,private login:LoginService,private foodie:){}\n  addtocart!:Order;\n  data:number | undefined;\n  restaurantItems:any=[];\n  restaurantId!: number;\n\n  ngOnInit(): void {\n    this.data = 51;\n    this.restaurantId = this.restaurant.id;\n    this.restaurant.getAllItems(+this.restaurantId).subscribe(data=>{      \n      this.restaurantItems = data;\n      console.log(this.restaurantItems);\n    })\n  }\ngetItems() {\n        this.restaurant.getAllItems(+this.restaurantId).subscribe(data=>{\n          console.log(data);\n          console.log(this.restaurantId);\n          this.restaurantItems = data;\n          console.log(this.restaurantItems);\n          \n        })\n      }\n\n          \naddToCart(itemName:string){\n  if(this.login.isLoggedIn){\n    this.addtocart = new Order();\n    this.addtocart.customerId = localStorage.getItem('email') ?? '';\n    this.addtocart.billingAddress=localStorage.getItem(\"address\")?? '';\n    let item:Item=this.restaurantItems.find((item: { itemName: string; })=>item.itemName==itemName)\n    if (item) {\n      if (!this.addtocart.items) {\n        this.addtocart.items = [];\n      }\n      this.addtocart.items = this.addtocart.items.concat(item);\n    }    console.log(this.addtocart);\n  this.restaurant.addtocart(this.addtocart).subscribe(data=>{});\n  }else\n  this.route.navigateByUrl(\"/login\");\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}