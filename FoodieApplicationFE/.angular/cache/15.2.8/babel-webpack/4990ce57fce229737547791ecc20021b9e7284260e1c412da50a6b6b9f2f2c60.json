{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Order } from '../model/order';\nlet ViewItemsComponent = class ViewItemsComponent {\n  constructor(restaurant, route, login, foodie, userService, _sanckBar) {\n    this.restaurant = restaurant;\n    this.route = route;\n    this.login = login;\n    this.foodie = foodie;\n    this.userService = userService;\n    this._sanckBar = _sanckBar;\n    this.restaurantItems = [];\n    this.cartItems = [];\n    this.favItems = [];\n  }\n  ngOnInit() {\n    this.foodie.getItems(\"incart\", localStorage.getItem('email')).subscribe(response => {\n      console.log(response);\n      this.cartItems = response;\n    }, error => {\n      this.cartItems = [];\n    });\n    this.userService.getListOfFavourites().subscribe(data => {\n      console.log(data);\n      this.favItems = data;\n    }, error => {\n      this.favItems = [];\n    });\n    this.data = 51;\n    this.restaurantId = this.restaurant.id;\n    // this.restaurant.getAllItems(+this.restaurantId).subscribe(data=>{      \n    //   this.restaurantItems = data;\n    // })\n    this.restaurant.getAllItems(+this.restaurantId).subscribe(data => {\n      this.restaurantItems = data.map(item => {\n        const cartItem = this.cartItems.find(cartitem => cartitem.itemName === item.itemName);\n        const incart = cartItem ? true : false;\n        const favItem = this.favItems.find(favitem => favitem.itemName === item.itemName);\n        const inFav = favItem ? true : false;\n        console.log(this.restaurantItems);\n        return {\n          item,\n          incart,\n          inFav\n        };\n      });\n    });\n  }\n  addToFavourites(itemData) {\n    // if(this.fav==false){\n    if (this.login.isLoggedIn) {\n      this.userService.addItemToFavourites(itemData).subscribe({\n        next: data => {\n          // this.fav=true;\n          this._sanckBar.open(`${itemData.itemName} is added on your Favourites`, 'success', {\n            duration: 3000,\n            panelClass: ['mat-toolbar', 'mat-primary']\n          });\n        },\n        error(err) {\n          alert(\"Not added to favourites!\");\n        }\n      });\n    } else {\n      this.route.navigateByUrl(\"/login\");\n    }\n    // }\n  }\n\n  addToCart(theItem) {\n    if (this.login.isLoggedIn) {\n      this.addtocart = new Order();\n      this.addtocart.customerId = localStorage.getItem('email') ?? '';\n      this.addtocart.billingAddress = localStorage.getItem(\"address\") ?? '';\n      if (theItem) {\n        console.log(theItem);\n        theItem.status = \"incart\";\n        theItem.count = 1;\n        if (!this.addtocart.items) {\n          this.addtocart.items = [];\n        }\n        this.addtocart.items = this.addtocart.items.concat(theItem);\n        this.foodie.insertOrder(this.addtocart).subscribe(data => {\n          this._sanckBar.open(`Item Added to Cart`, 'success', {\n            duration: 3000,\n            panelClass: ['mat-toolbar', 'mat-primary']\n          });\n        });\n      } else this.route.navigateByUrl(\"/login\");\n    } else {\n      this.route.navigateByUrl(\"/login\");\n    }\n  }\n};\nViewItemsComponent = __decorate([Component({\n  selector: 'app-view-items',\n  templateUrl: './view-items.component.html',\n  styleUrls: ['./view-items.component.css']\n})], ViewItemsComponent);\nexport { ViewItemsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAASC,KAAK,QAAQ,gBAAgB;AAW/B,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAC7BC,YAAoBC,UAAmC,EAASC,KAAY,EAASC,KAAkB,EAASC,MAAoB,EAASC,WAAuB,EAASC,SAAqB;IAA9K,eAAU,GAAVL,UAAU;IAAkC,UAAK,GAALC,KAAK;IAAgB,UAAK,GAALC,KAAK;IAAsB,WAAM,GAANC,MAAM;IAAuB,gBAAW,GAAXC,WAAW;IAAqB,cAAS,GAATC,SAAS;IAKtL,oBAAe,GAAK,EAAE;IACtB,cAAS,GAAK,EAAE;IAChB,aAAQ,GAAK,EAAE;EAPqL;EASpMC,QAAQ;IACN,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,QAAQ,EAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAE;MAC/EC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACG,SAAS,GAACH,QAAQ;IACzB,CAAC,EAAEI,KAAK,IAAG;MACT,IAAI,CAACD,SAAS,GAAC,EAAE;IACnB,CAAC,CAAC;IAEF,IAAI,CAACV,WAAW,CAACY,mBAAmB,EAAE,CAACN,SAAS,CAAEO,IAAQ,IAAG;MACzDL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;MAChB,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACvB,CAAC,EAAEF,KAAK,IAAG;MACT,IAAI,CAACG,QAAQ,GAAC,EAAE;IAClB,CAAC,CAAC;IAEJ,IAAI,CAACD,IAAI,GAAG,EAAE;IACd,IAAI,CAACE,YAAY,GAAG,IAAI,CAACnB,UAAU,CAACoB,EAAE;IACtC;IACA;IACA;IACA,IAAI,CAACpB,UAAU,CAACqB,WAAW,CAAC,CAAC,IAAI,CAACF,YAAY,CAAC,CAACT,SAAS,CAAEO,IAAQ,IAAG;MACpE,IAAI,CAACK,eAAe,GAAGL,IAAI,CAACM,GAAG,CAAEC,IAAQ,IAAG;QAC1C,MAAMC,QAAQ,GAAC,IAAI,CAACX,SAAS,CAACY,IAAI,CAAEC,QAAY,IAAGA,QAAQ,CAACC,QAAQ,KAAGJ,IAAI,CAACI,QAAQ,CAAC;QACrF,MAAMC,MAAM,GAACJ,QAAQ,GAAC,IAAI,GAAC,KAAK;QAChC,MAAMK,OAAO,GAAC,IAAI,CAACZ,QAAQ,CAACQ,IAAI,CAAEK,OAAW,IAAGA,OAAO,CAACH,QAAQ,KAAGJ,IAAI,CAACI,QAAQ,CAAC;QACjF,MAAMI,KAAK,GAACF,OAAO,GAAC,IAAI,GAAC,KAAK;QAC9BlB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACS,eAAe,CAAC;QACjC,OAAM;UAACE,IAAI;UAACK,MAAM;UAACG;QAAK,CAAC;MAC3B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEFC,eAAe,CAACC,QAAY;IAC1B;IACA,IAAG,IAAI,CAAChC,KAAK,CAACiC,UAAU,EAAC;MACzB,IAAI,CAAC/B,WAAW,CAACgC,mBAAmB,CAACF,QAAQ,CAAC,CAACxB,SAAS,CAAC;QACvD2B,IAAI,EAACpB,IAAI,IAAE;UACT;UACA,IAAI,CAACZ,SAAS,CAACiC,IAAI,CAAC,GAAGJ,QAAQ,CAACN,QAAQ,8BAA8B,EAAE,SAAS,EAAE;YACjFW,QAAQ,EAAE,IAAI;YACdC,UAAU,EAAE,CAAC,aAAa,EAAE,aAAa;WAC1C,CAAC;QACJ,CAAC;QAACzB,KAAK,CAAC0B,GAAG;UACLC,KAAK,CAAC,0BAA0B,CAAC;QACvC;OACD,CAAC;KACH,MAAI;MACH,IAAI,CAACzC,KAAK,CAAC0C,aAAa,CAAC,QAAQ,CAAC;;IAElC;EACF;;EAEAC,SAAS,CAACC,OAAW;IACnB,IAAG,IAAI,CAAC3C,KAAK,CAACiC,UAAU,EAAC;MACvB,IAAI,CAACW,SAAS,GAAG,IAAIjD,KAAK,EAAE;MAC5B,IAAI,CAACiD,SAAS,CAACC,UAAU,GAAGvC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;MAC/D,IAAI,CAACqC,SAAS,CAACE,cAAc,GAACxC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAG,EAAE;MAClE,IAAIoC,OAAO,EAAE;QACXjC,OAAO,CAACC,GAAG,CAACgC,OAAO,CAAC;QACpBA,OAAO,CAACI,MAAM,GAAC,QAAQ;QACvBJ,OAAO,CAACK,KAAK,GAAC,CAAC;QACf,IAAI,CAAC,IAAI,CAACJ,SAAS,CAACK,KAAK,EAAE;UACzB,IAAI,CAACL,SAAS,CAACK,KAAK,GAAG,EAAE;;QAE3B,IAAI,CAACL,SAAS,CAACK,KAAK,GAAG,IAAI,CAACL,SAAS,CAACK,KAAK,CAACC,MAAM,CAACP,OAAO,CAAC;QAC3D,IAAI,CAAC1C,MAAM,CAACkD,WAAW,CAAC,IAAI,CAACP,SAAS,CAAC,CAACpC,SAAS,CAACO,IAAI,IAAE;UACtD,IAAI,CAACZ,SAAS,CAACiC,IAAI,CAAC,oBAAoB,EAAE,SAAS,EAAE;YACnDC,QAAQ,EAAE,IAAI;YACdC,UAAU,EAAE,CAAC,aAAa,EAAE,aAAa;WAC1C,CAAC;QACJ,CAAC,CAAC;OACD,MACL,IAAI,CAACvC,KAAK,CAAC0C,aAAa,CAAC,QAAQ,CAAC;KACnC,MAAM;MAAC,IAAI,CAAC1C,KAAK,CAAC0C,aAAa,CAAC,QAAQ,CAAC;;EAC1C;CAGC;AAvFY7C,kBAAkB,eAL9BF,SAAS,CAAC;EACT0D,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GACW1D,kBAAkB,CAuF9B;SAvFYA,kBAAkB","names":["Component","Order","ViewItemsComponent","constructor","restaurant","route","login","foodie","userService","_sanckBar","ngOnInit","getItems","localStorage","getItem","subscribe","response","console","log","cartItems","error","getListOfFavourites","data","favItems","restaurantId","id","getAllItems","restaurantItems","map","item","cartItem","find","cartitem","itemName","incart","favItem","favitem","inFav","addToFavourites","itemData","isLoggedIn","addItemToFavourites","next","open","duration","panelClass","err","alert","navigateByUrl","addToCart","theItem","addtocart","customerId","billingAddress","status","count","items","concat","insertOrder","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\view-items\\view-items.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RestaurantServiceService } from '../service/restaurant-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoginService } from '../service/login.service';\nimport { Order } from '../model/order';\nimport { Item } from '../model/item';\nimport { FoodieService } from '../service/foodie.service';\nimport { UserService } from '../service/user.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-view-items',\n  templateUrl: './view-items.component.html',\n  styleUrls: ['./view-items.component.css']\n})\nexport class ViewItemsComponent implements OnInit{\n  constructor(private restaurant:RestaurantServiceService,private route:Router,private login:LoginService,private foodie:FoodieService,private userService:UserService,private _sanckBar:MatSnackBar){}\n  addtocart!:Order;\n  // fav:boolean=false;\n  itemId!:boolean;\n  data:number | undefined;\n  restaurantItems:any=[];\n  cartItems:any=[];\n  favItems:any=[];\n  restaurantId!: number;\n  ngOnInit(): void {\n    this.foodie.getItems(\"incart\",localStorage.getItem('email')).subscribe(response=>{\n      console.log(response);\n      this.cartItems=response; \n    },(error)=>{\n      this.cartItems=[];\n    });\n\n    this.userService.getListOfFavourites().subscribe((data:any)=>{\n        console.log(data);\n         this.favItems = data;\n      },(error)=>{\n        this.favItems=[];\n      })\n\n    this.data = 51;\n    this.restaurantId = this.restaurant.id;\n    // this.restaurant.getAllItems(+this.restaurantId).subscribe(data=>{      \n    //   this.restaurantItems = data;\n    // })\n    this.restaurant.getAllItems(+this.restaurantId).subscribe((data:any)=>{      \n      this.restaurantItems = data.map((item:any)=>{\n        const cartItem=this.cartItems.find((cartitem:any)=>cartitem.itemName===item.itemName);\n        const incart=cartItem?true:false;\n        const favItem=this.favItems.find((favitem:any)=>favitem.itemName===item.itemName);\n        const inFav=favItem?true:false;\n        console.log(this.restaurantItems);\n        return{item,incart,inFav};\n      });\n    });\n  }\n\naddToFavourites(itemData:any){\n  // if(this.fav==false){\n  if(this.login.isLoggedIn){\n  this.userService.addItemToFavourites(itemData).subscribe({\n    next:data=>{\n      // this.fav=true;\n      this._sanckBar.open(`${itemData.itemName} is added on your Favourites`, 'success', {\n        duration: 3000,\n        panelClass: ['mat-toolbar', 'mat-primary']\n      });\n    },error(err) {\n          alert(\"Not added to favourites!\");\n    },\n  })\n}else{\n  this.route.navigateByUrl(\"/login\");\n}\n  // }\n}\n          \naddToCart(theItem:any){\n  if(this.login.isLoggedIn){\n    this.addtocart = new Order();\n    this.addtocart.customerId = localStorage.getItem('email') ?? '';\n    this.addtocart.billingAddress=localStorage.getItem(\"address\")?? '';\n    if (theItem) {\n      console.log(theItem);\n      theItem.status=\"incart\";\n      theItem.count=1;\n      if (!this.addtocart.items) {\n        this.addtocart.items = [];\n      }\n      this.addtocart.items = this.addtocart.items.concat(theItem);\n      this.foodie.insertOrder(this.addtocart).subscribe(data=>{\n        this._sanckBar.open(`Item Added to Cart`, 'success', {\n          duration: 3000,\n          panelClass: ['mat-toolbar', 'mat-primary']\n        });\n      });\n      }else\n  this.route.navigateByUrl(\"/login\");\n}  else{this.route.navigateByUrl(\"/login\");}\n}\n\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}