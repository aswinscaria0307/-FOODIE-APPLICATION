{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AddItemsComponent = class AddItemsComponent {\n  constructor(fb, service, route) {\n    this.fb = fb;\n    this.service = service;\n    this.route = route;\n    this.items = [];\n    this.addform = this.fb.group({\n      \"itemId\": ['', Validators.required],\n      \"itemName\": ['', Validators.required],\n      \"imageUrl\": ['', Validators.required],\n      \"itemPrice\": ['', Validators.required],\n      \"itemRating\": ['', Validators.required]\n    });\n  }\n  addItem() {\n    if (this.addform.valid) {\n      this.items.push(this.addform.value);\n      this.service.getId(this.restaurantId);\n      this.service.addItem(this.items, this.restaurantId).subscribe(response => {\n        alert(\"items are added successfully\");\n        this.addform.reset();\n        this.route.navigateByUrl('/adminFoodItem');\n      }, error => {\n        alert(\"add all the details\");\n      });\n    }\n  }\n  view() {\n    this.route.navigateByUrl(\"/viewAdminItem\");\n  }\n  update() {\n    if (this.addform.valid) {\n      this.service.getId(this.restaurantId);\n      this.service.updateItem(this.addform.value, this.restaurantId).subscribe(response => {\n        alert(\"items have been updated\");\n        this.addform.reset();\n        this.route.navigateByUrl('/adminFoodItem');\n      }, error => {\n        alert(\"add all the items\");\n      });\n    }\n  }\n};\nAddItemsComponent = __decorate([Component({\n  selector: 'app-add-items',\n  templateUrl: './add-items.component.html',\n  styleUrls: ['./add-items.component.css']\n})], AddItemsComponent);\nexport { AddItemsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,UAAU,QAAQ,gBAAgB;AAUjD,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAO5BC,YAAoBC,EAAc,EAASC,OAAgC,EAASC,KAAY;IAA5E,OAAE,GAAFF,EAAE;IAAqB,YAAO,GAAPC,OAAO;IAAkC,UAAK,GAALC,KAAK;IAFzF,UAAK,GAAM,EAAE;IAIb,YAAO,GAAK,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACxB,QAAQ,EAAC,CAAC,EAAE,EAACN,UAAU,CAACO,QAAQ,CAAC;MAClC,UAAU,EAAE,CAAC,EAAE,EAACP,UAAU,CAACO,QAAQ,CAAC;MACpC,UAAU,EAAC,CAAC,EAAE,EAACP,UAAU,CAACO,QAAQ,CAAC;MACpC,WAAW,EAAC,CAAC,EAAE,EAACP,UAAU,CAACO,QAAQ,CAAC;MACpC,YAAY,EAAC,CAAC,EAAE,EAACP,UAAU,CAACO,QAAQ;KACrC,CAAC;EARkG;EAUpGC,OAAO;IACL,IAAG,IAAI,CAACC,OAAO,CAACC,KAAK,EAAC;MACpB,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACH,OAAO,CAACI,KAAK,CAAC;MACnC,IAAI,CAACT,OAAO,CAACU,KAAK,CAAC,IAAI,CAACC,YAAY,CAAC;MACrC,IAAI,CAACX,OAAO,CAACI,OAAO,CAAC,IAAI,CAACG,KAAK,EAAC,IAAI,CAACI,YAAY,CAAC,CAACC,SAAS,CAC1DC,QAAQ,IAAE;QACRC,KAAK,CAAC,8BAA8B,CAAC;QACrC,IAAI,CAACT,OAAO,CAACU,KAAK,EAAE;QACpB,IAAI,CAACd,KAAK,CAACe,aAAa,CAAC,gBAAgB,CAAC;MAC5C,CAAC,EACDC,KAAK,IAAE;QACLH,KAAK,CAAC,qBAAqB,CAAC;MAC9B,CAAC,CACF;;EAGL;EAEAI,IAAI;IACF,IAAI,CAACjB,KAAK,CAACe,aAAa,CAAC,gBAAgB,CAAC;EAC5C;EACAG,MAAM;IACJ,IAAG,IAAI,CAACd,OAAO,CAACC,KAAK,EAAC;MACpB,IAAI,CAACN,OAAO,CAACU,KAAK,CAAC,IAAI,CAACC,YAAY,CAAC;MACrC,IAAI,CAACX,OAAO,CAACoB,UAAU,CAAC,IAAI,CAACf,OAAO,CAACI,KAAK,EAAC,IAAI,CAACE,YAAY,CAAC,CAACC,SAAS,CACrEC,QAAQ,IAAE;QACRC,KAAK,CAAC,yBAAyB,CAAC;QAChC,IAAI,CAACT,OAAO,CAACU,KAAK,EAAE;QACpB,IAAI,CAACd,KAAK,CAACe,aAAa,CAAC,gBAAgB,CAAC;MAC5C,CAAC,EACDC,KAAK,IAAE;QACLH,KAAK,CAAC,mBAAmB,CAAC;MAC5B,CAAC,CACF;;EAEL;CACC;AArDYjB,iBAAiB,eAL7BF,SAAS,CAAC;EACT0B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACW1B,iBAAiB,CAqD7B;SArDYA,iBAAiB","names":["Component","Validators","AddItemsComponent","constructor","fb","service","route","group","required","addItem","addform","valid","items","push","value","getId","restaurantId","subscribe","response","alert","reset","navigateByUrl","error","view","update","updateItem","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\add-items\\add-items.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\nimport { Router } from '@angular/router';\nimport { RestaurantServiceService } from '../service/restaurant-service.service';\n\n@Component({\n  selector: 'app-add-items',\n  templateUrl: './add-items.component.html',\n  styleUrls: ['./add-items.component.css']\n})\nexport class AddItemsComponent {\n  userLoggedIn?:string;\n\n  restaurantId:any;\n\n  items:any =[]\n\n  constructor(private fb:FormBuilder,private service:RestaurantServiceService,private route:Router){}\n\n  addform:any=this.fb.group({\n    \"itemId\":['',Validators.required],\n   \"itemName\" :['',Validators.required],\n   \"imageUrl\":['',Validators.required],\n  \"itemPrice\":['',Validators.required],\n  \"itemRating\":['',Validators.required]\n})\n\naddItem(){\n  if(this.addform.valid){\n    this.items.push(this.addform.value);\n    this.service.getId(this.restaurantId);\n    this.service.addItem(this.items,this.restaurantId).subscribe(\n      response=>{\n        alert(\"items are added successfully\");\n        this.addform.reset();\n        this.route.navigateByUrl('/adminFoodItem');\n      },\n      error=>{\n        alert(\"add all the details\");\n      }\n    )\n  }\n \n}\n\nview(){\n  this.route.navigateByUrl(\"/viewAdminItem\");\n}\nupdate(){\n  if(this.addform.valid){\n    this.service.getId(this.restaurantId);\n    this.service.updateItem(this.addform.value,this.restaurantId).subscribe(\n      response=>{\n        alert(\"items have been updated\");\n        this.addform.reset();\n        this.route.navigateByUrl('/adminFoodItem');\n      },\n      error=>{\n        alert(\"add all the items\");\n      }\n    )\n  }\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}