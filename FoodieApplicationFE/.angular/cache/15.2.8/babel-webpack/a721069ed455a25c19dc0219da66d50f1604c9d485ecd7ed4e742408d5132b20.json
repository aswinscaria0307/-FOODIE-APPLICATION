{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet RestaurantViewComponent = class RestaurantViewComponent {\n  constructor(service, route, activatedRoute, login) {\n    this.service = service;\n    this.route = route;\n    this.activatedRoute = activatedRoute;\n    this.login = login;\n    this.searchedItems = [];\n    this.searchedRestaurants = [];\n    this.restaurants = [];\n  }\n  ngOnInit() {\n    this.service.getAllRestaurant().subscribe(response => {\n      this.restaurants = response;\n    }, error => {\n      alert(\"error!!!!\");\n    });\n    this.login.searchElement.subscribe(seachelement => {\n      this.onSearchTextChanged(seachelement);\n    });\n  }\n  getItems(id) {\n    this.service.getId(id);\n    this.route.navigateByUrl('/viewItem');\n  }\n  getLocation(location) {\n    this.getLocation(location);\n    this.service.getRestaurantByLocation(location).subscribe(response => {\n      const restaurantArray = response;\n      if (location && location !== '') {\n        this.restaurants = restaurantArray.filter(restaurant => restaurant.location === location);\n      } else {\n        this.restaurants = restaurantArray;\n        console.log(restaurantArray);\n      }\n    }, error => {\n      alert(\"error!!!!\");\n    });\n  }\n  onSearchTextChanged(searchText) {\n    if (searchText && searchText.trim() !== '') {\n      this.searchedItems = [];\n      this.restaurants.forEach(restaurant => {\n        restaurant.items.forEach(item => {\n          if (item.itemName.toLowerCase().includes(searchText.toLowerCase())) {\n            this.searchedItems.push(item);\n          }\n        });\n      });\n    } else {\n      this.ngOnInit();\n      this.searchedItems = [];\n    }\n    if (searchText || searchText !== '') {\n      this.searchedRestaurants = this.restaurants.filter(restaurant => {\n        return restaurant.restaurantName.toLowerCase().includes(searchText.toLowerCase());\n      });\n    } else {\n      this.ngOnInit();\n    }\n    console.log(this.searchedItems);\n    console.log(this.searchedRestaurants);\n  }\n};\n__decorate([Input('restaurants')], RestaurantViewComponent.prototype, \"restaurants\", void 0);\nRestaurantViewComponent = __decorate([Component({\n  selector: 'app-restaurant-view',\n  templateUrl: './restaurant-view.component.html',\n  styleUrls: ['./restaurant-view.component.css']\n})], RestaurantViewComponent);\nexport { RestaurantViewComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,eAAe;AAUzC,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAClCC,YAAoBC,OAAgC,EAASC,KAAY,EAASC,cAA6B,EAASC,KAAkB;IAAtH,YAAO,GAAPH,OAAO;IAAkC,UAAK,GAALC,KAAK;IAAgB,mBAAc,GAAdC,cAAc;IAAwB,UAAK,GAALC,KAAK;IAE7H,kBAAa,GAAK,EAAE;IACpB,wBAAmB,GAAK,EAAE;IAqBF,gBAAW,GAAO,EAAE;EAvB5C;EAIAC,QAAQ;IACN,IAAI,CAACJ,OAAO,CAACK,gBAAgB,EAAE,CAACC,SAAS,CACvCC,QAAQ,IAAE;MACR,IAAI,CAACC,WAAW,GAACD,QAAQ;IAC3B,CAAC,EACDE,KAAK,IAAE;MACLC,KAAK,CAAC,WAAW,CAAC;IACpB,CAAC,CACF;IACD,IAAI,CAACP,KAAK,CAACQ,aAAa,CAACL,SAAS,CAACM,YAAY,IAAE;MAC/C,IAAI,CAACC,mBAAmB,CAACD,YAAY,CAAC;IACxC,CAAC,CAAC;EACJ;EAEAE,QAAQ,CAACC,EAAS;IAChB,IAAI,CAACf,OAAO,CAACgB,KAAK,CAACD,EAAE,CAAC;IACtB,IAAI,CAACd,KAAK,CAACgB,aAAa,CAAC,WAAW,CAAC;EACrC;EAIAC,WAAW,CAACC,QAAY;IACtB,IAAI,CAACD,WAAW,CAACC,QAAQ,CAAC;IAC1B,IAAI,CAACnB,OAAO,CAACoB,uBAAuB,CAACD,QAAQ,CAAC,CAACb,SAAS,CACrDC,QAAgB,IAAI;MACnB,MAAMc,eAAe,GAAGd,QAAiB;MACzC,IAAGY,QAAQ,IAAIA,QAAQ,KAAK,EAAE,EAAC;QAC7B,IAAI,CAACX,WAAW,GAAGa,eAAe,CAACC,MAAM,CAAEC,UAAc,IAAKA,UAAU,CAACJ,QAAQ,KAAKA,QAAQ,CAAC;OAChG,MAAM;QACL,IAAI,CAACX,WAAW,GAAGa,eAAe;QAClCG,OAAO,CAACC,GAAG,CAACJ,eAAe,CAAC;;IAGhC,CAAC,EACDZ,KAAK,IAAE;MACLC,KAAK,CAAC,WAAW,CAAC;IACpB,CAAC,CACF;EACH;EAGAG,mBAAmB,CAACa,UAAiB;IACzB,IAAIA,UAAU,IAAIA,UAAU,CAACC,IAAI,EAAE,KAAK,EAAE,EAAE;MAC1C,IAAI,CAACC,aAAa,GAAG,EAAE;MACvB,IAAI,CAACpB,WAAW,CAACqB,OAAO,CAAEN,UAAe,IAAI;QAC3CA,UAAU,CAACO,KAAK,CAACD,OAAO,CAAEE,IAAS,IAAI;UACrC,IAAIA,IAAI,CAACC,QAAQ,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACR,UAAU,CAACO,WAAW,EAAE,CAAC,EAAE;YAClE,IAAI,CAACL,aAAa,CAACO,IAAI,CAACJ,IAAI,CAAC;;QAEjC,CAAC,CAAC;MACJ,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAAC3B,QAAQ,EAAE;MACf,IAAI,CAACwB,aAAa,GAAG,EAAE;;IAGzB,IAAGF,UAAU,IAAIA,UAAU,KAAK,EAAE,EAAC;MACjC,IAAI,CAACU,mBAAmB,GAAC,IAAI,CAAC5B,WAAW,CAACc,MAAM,CAAEC,UAAc,IAAG;QAC/D,OAAOA,UAAU,CAACc,cAAc,CAACJ,WAAW,EAAE,CAACC,QAAQ,CAACR,UAAU,CAACO,WAAW,EAAE,CAAC;MACnF,CAAC,CAAC;KACL,MAAI;MACH,IAAI,CAAC7B,QAAQ,EAAE;;IAEjBoB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACG,aAAa,CAAC;IAC/BJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACW,mBAAmB,CAAC;EACvC;CAEb;AAhDyBE,YAArBzC,KAAK,CAAC,aAAa,CAAC,4DAAsB;AAzBlCC,uBAAuB,eALnCF,SAAS,CAAC;EACT2C,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,GACW3C,uBAAuB,CAyEnC;SAzEYA,uBAAuB","names":["Component","Input","RestaurantViewComponent","constructor","service","route","activatedRoute","login","ngOnInit","getAllRestaurant","subscribe","response","restaurants","error","alert","searchElement","seachelement","onSearchTextChanged","getItems","id","getId","navigateByUrl","getLocation","location","getRestaurantByLocation","restaurantArray","filter","restaurant","console","log","searchText","trim","searchedItems","forEach","items","item","itemName","toLowerCase","includes","push","searchedRestaurants","restaurantName","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\restaurant-view\\restaurant-view.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { RestaurantServiceService } from '../service/restaurant-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoginService } from '../service/login.service';\n\n@Component({\n  selector: 'app-restaurant-view',\n  templateUrl: './restaurant-view.component.html',\n  styleUrls: ['./restaurant-view.component.css']\n})\nexport class RestaurantViewComponent {\n  constructor(private service:RestaurantServiceService,private route:Router,private activatedRoute:ActivatedRoute,private login:LoginService){\n  }\n  searchedItems:any=[];\n  searchedRestaurants:any=[];\n\n  ngOnInit(): void {\n    this.service.getAllRestaurant().subscribe(\n      response=>{\n        this.restaurants=response;\n      },\n      error=>{\n        alert(\"error!!!!\");\n      }\n    )\n    this.login.searchElement.subscribe(seachelement=>{\n      this.onSearchTextChanged(seachelement);\n    })\n  }\n\n  getItems(id:number) {\n    this.service.getId(id);\n    this.route.navigateByUrl('/viewItem');\n    }\n\n    @Input('restaurants') restaurants:any = [];\n\n    getLocation(location:any){\n      this.getLocation(location);\n      this.service.getRestaurantByLocation(location).subscribe(\n        (response: Object) => {\n          const restaurantArray = response as any[];\n          if(location && location !== ''){\n            this.restaurants = restaurantArray.filter((restaurant:any) => restaurant.location === location);\n          } else {\n            this.restaurants = restaurantArray;\n            console.log(restaurantArray);\n            \n          }\n        },\n        error=>{\n          alert(\"error!!!!\");\n        }\n      )\n    }\n\n\n    onSearchTextChanged(searchText:string) {\n                if (searchText && searchText.trim() !== '') {\n                  this.searchedItems = [];\n                  this.restaurants.forEach((restaurant: any) => {\n                    restaurant.items.forEach((item: any) => {\n                      if (item.itemName.toLowerCase().includes(searchText.toLowerCase())) {\n                        this.searchedItems.push(item);\n                      }\n                    });\n                  });\n                } else {\n                  this.ngOnInit()\n                  this.searchedItems = [];\n                }\n\n                if(searchText || searchText !== ''){\n                  this.searchedRestaurants=this.restaurants.filter((restaurant:any)=>{\n                      return restaurant.restaurantName.toLowerCase().includes(searchText.toLowerCase());\n                    });\n                }else{\n                  this.ngOnInit()\n                }\n                console.log(this.searchedItems);\n                console.log(this.searchedRestaurants);\n              }\n          \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}