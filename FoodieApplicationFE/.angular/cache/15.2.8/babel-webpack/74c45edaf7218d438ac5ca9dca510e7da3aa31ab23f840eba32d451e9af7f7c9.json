{"ast":null,"code":"\"use strict\";\n\n// import { Component } from '@angular/core';\n// import { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { UserService } from '../service/user.service';\n// import { MatSnackBar } from '@angular/material/snack-bar';\n// import { Router } from '@angular/router';\n// import { LoginService } from '../service/login.service';\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.css']\n// })\n// export class LoginComponent {\n//   responseData:any;\n//   constructor(private fb:FormBuilder,private userService:UserService,private _sanckBar:MatSnackBar,private route:Router,private loginStatus:LoginService){}\n//   loginForm = this.fb.group({\n//     email:[\"\",[Validators.required,this.checkIfGuestEmailsAreValid]],\n//     password:[\"\",[Validators.required,Validators.minLength(7)]]\n//   })\n//   get email(){\n//     return this.loginForm.get('email');\n//   }\n//   get password(){\n//     return this.loginForm.get('password')\n//   }\n//   checkIfGuestEmailsAreValid(c: AbstractControl) {\n//     if (c.value !== '') {\n//       const emailString = c.value;\n//       const emails = emailString.split(',').map((e: string) => e.trim());\n//       const emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n//       const anyInvalidEmail = emails.every((e: string) => e.match(emailRegex) !== null);\n//       if (!anyInvalidEmail) {\n//         return { checkIfGuestEmailsAreValid: false }\n//       }\n//     }\n//     return null;\n//   }\n//   loginCheck(){\n//     // console.log(this.loginForm);\n//       this.userService.login(this.loginForm.value).subscribe({\n//         next:data=>{\n//           this.responseData=data;\n//           // console.log(this.responseData);\n//           localStorage.setItem('Token',this.responseData.Token);\n//           // localStorage.setItem('email',this.responseData.email);\n//           this._sanckBar.open('Logged In successfully.....', 'success', {\n//             duration: 3000,\n//             panelClass: ['mat-toolbar', 'mat-primary']\n//           });\n//           this.loginStatus.loginSuccess();\n//           this.route.navigateByUrl(\"/header\");\n//         },error:(err)=>{\n//            this.loginStatus.onFailure()\n//           alert(\"Authorization failed, Please check the provided details again!\")\n//         }\n//       })\n//   }\n// }","map":{"version":3,"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":[],"sourceRoot":"","sources":["F:\\CAPSTONE PROJECT- FOODIE APP\\FoodieApplicationFE\\FoodieApplication\\src\\app\\login\\login.component.ts"],"sourcesContent":["// import { Component } from '@angular/core';\n// import { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { UserService } from '../service/user.service';\n// import { MatSnackBar } from '@angular/material/snack-bar';\n// import { Router } from '@angular/router';\n// import { LoginService } from '../service/login.service';\n\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.css']\n// })\n// export class LoginComponent {\n\n//   responseData:any;\n\n//   constructor(private fb:FormBuilder,private userService:UserService,private _sanckBar:MatSnackBar,private route:Router,private loginStatus:LoginService){}\n\n//   loginForm = this.fb.group({\n//     email:[\"\",[Validators.required,this.checkIfGuestEmailsAreValid]],\n//     password:[\"\",[Validators.required,Validators.minLength(7)]]\n//   })\n\n//   get email(){\n//     return this.loginForm.get('email');\n//   }\n\n//   get password(){\n//     return this.loginForm.get('password')\n//   }\n\n//   checkIfGuestEmailsAreValid(c: AbstractControl) {\n \n//     if (c.value !== '') {\n//       const emailString = c.value;\n//       const emails = emailString.split(',').map((e: string) => e.trim());\n//       const emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n//       const anyInvalidEmail = emails.every((e: string) => e.match(emailRegex) !== null);\n//       if (!anyInvalidEmail) {\n//         return { checkIfGuestEmailsAreValid: false }\n//       }\n//     }\n//     return null;\n//   }\n\n//   loginCheck(){\n//     // console.log(this.loginForm);\n    \n//       this.userService.login(this.loginForm.value).subscribe({\n//         next:data=>{\n//           this.responseData=data;\n//           // console.log(this.responseData);\n          \n//           localStorage.setItem('Token',this.responseData.Token);\n//           // localStorage.setItem('email',this.responseData.email);\n             \n\n//           this._sanckBar.open('Logged In successfully.....', 'success', {\n//             duration: 3000,\n//             panelClass: ['mat-toolbar', 'mat-primary']\n//           });\n//           this.loginStatus.loginSuccess();\n//           this.route.navigateByUrl(\"/header\");\n//         },error:(err)=>{\n//            this.loginStatus.onFailure()\n//           alert(\"Authorization failed, Please check the provided details again!\")\n//         }\n//       })\n//   }\n// }\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}